--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.12.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.12.0
Compile date:      Jul 10 2023 (18:34:21)
Run date:          Jul 11 2023 (08:46:50-0500)
Run host:          cn061.delta.ncsa.illinois.edu (pid=3053443)
Working directory: /scratch/bbgz/adima/test_canudax/2Punc_Lean_UIUC_nosub
Executable:        /u/adima/Code/Cactus/exe/cactus_et_canuda_uiuc
Parameter file:    2Punc_Lean_UIUC_nosub.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->ADMBase ADMCoupling ADMMacros AEILocalInterp Boundary Carpet CarpetInterp CarpetIOASCII CarpetIOBasic CarpetIOHDF5 CarpetIOScalar CarpetLib CarpetMask CarpetReduce CarpetRegrid2 CarpetSlab CarpetTracker CartGrid3D CoordBase CoordGauge Dissipation Fortran GSL HDF5 InitBase IOUtil LeanBSSNMoL LocalInterp LoopControl MoL NaNChecker NewRad PeriodicCarpet ReflectionSymmetry Slab SpaceMask SphericalSurface StaticConformal SymBase SystemStatistics TerminationTrigger Time TimerReport TmunuBase TwoPunctures<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn HDF5 requests automatic activation of zlib
Thorn LoopControl requests automatic activation of hwloc
Thorn NewRad requests automatic activation of GenericFD
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMCoupling...Success -> active implementation ADMCoupling
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetMask...Success -> active implementation CarpetMask
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CarpetSlab...Success -> active implementation Hyperslab
Activating thorn CarpetTracker...Success -> active implementation CarpetTracker
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Dissipation...Success -> active implementation Dissipation
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LeanBSSNMoL...Success -> active implementation LeanBSSNMoL
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn PeriodicCarpet...Success -> active implementation PeriodicCarpet
Activating thorn ReflectionSymmetry...Success -> active implementation ReflectionSymmetry
Activating thorn Slab...Success -> active implementation Slab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn SystemStatistics...Success -> active implementation SystemStatistics
Activating thorn TerminationTrigger...Success -> active implementation TerminationTrigger
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LeanBSSNMoL::LeanBSSN_RegisterSlicing: [meta] Register slicing
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      Slab::Slab_InitMPIDatatypes: Create MPI datatypes for complex variables in C
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      TerminationTrigger::TerminationTrigger_StartSignalHandler: Start signal handler
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        LeanBSSNMoL::LeanBSSN_RegisterVars: [meta] Register variables for MoL
      Slab::Slab_InitTimers: Initialise timers
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          PeriodicCarpet::PeriodicCarpet_RegisterBC: Register periodic boundary conditions
          ReflectionSymmetry::ReflectionSymmetry_Register: Register reflection symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetMask::CarpetSurfaceParamCheck: [global] Check parameters
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Dissipation::dissipation_paramcheck: Check dissipation parameters for consistency
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      LeanBSSNMoL::Lean_ParamCheck: Check Lean parameters for consistency
      MoL::MoL_ParamCheck: Basic parameter checking
      PeriodicCarpet::PeriodicCarpet_ParamCheck: [level] Register periodic boundary conditions
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      TerminationTrigger::TerminationTrigger_ParamCheck: Check consitency of parameters
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        Dissipation::setup_epsdis: Setup spatially varying dissipation
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        LeanBSSNMoL::LeanBSSN_symmetries: [global] Register symmetries of the BSSN grid functions
        LeanBSSNMoL::LeanBSSN_zero_rhs: Set all rhs functions to zero to prevent spurious nans
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set fixed timestep
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        LeanBSSNMoL::LeanBSSN_adm2bssn: [local] Convert initial data into BSSN variables
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        Dissipation::setup_epsdis: Setup spatially varying dissipation
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        LeanBSSNMoL::LeanBSSN_symmetries: [global] Register symmetries of the BSSN grid functions
        LeanBSSNMoL::LeanBSSN_zero_rhs: Set all rhs functions to zero to prevent spurious nans
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set fixed timestep
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        TerminationTrigger::TerminationTrigger_ResetMinutes: [global] Reset Watchtime
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        GROUP LeanBSSN_constraints: Compute constraints
          LeanBSSNMoL::LeanBSSN_bssn_constraints: Compute constraints
          LeanBSSNMoL::LeanBSSN_Constraints_Boundaries: [level] Enforce symmetry BCs in constraint computation
          GROUP LeanBSSN_Constraints_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
        TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
        TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
        TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
      CarpetTracker::CarpetTracker_SetPositions: [global] Set positions of refined regions
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                LeanBSSNMoL::LeanBSSN_CalcRHS: MoL RHS calculation
                LeanBSSNMoL::LeanBSSN_add_dissipation_5: Kreiss-Oliger dissipation
              GROUP MoL_PostRHS: Modify RHS functions
                Dissipation::dissipation_add: Add Kreiss-Oliger dissipation to the right hand sides
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
                LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
                LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
                GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
                    ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      GROUP LeanBSSN_constraints: Compute constraints
        LeanBSSNMoL::LeanBSSN_bssn_constraints: Compute constraints
        LeanBSSNMoL::LeanBSSN_Constraints_Boundaries: [level] Enforce symmetry BCs in constraint computation
        GROUP LeanBSSN_Constraints_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
      TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
      TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
      TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            PeriodicCarpet::PeriodicCarpet_ApplyBC: Apply periodic boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-127: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=128000 MB, soft=128000 MB
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.373253 ns per clock tick (2.67915 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.2.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 128 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 128 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host cn061.delta.ncsa.illinois.edu, pid=3053443
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-64,-64,-64] : [64,64,64]   ([128,128,128])
   interior extent: [-63.5,-63.5,-63.5] : [63.5,63.5,63.5]   ([127,127,127])
   exterior extent: [-65,-65,-65] : [65,65,65]   ([130,130,130])
   base_spacing   : [0.5,0.5,0.5]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-64,-64,-64] : [64,64,64]   ([128,128,128])
   interior extent   : [-63.5,-63.5,-63.5] : [63.5,63.5,63.5]   ([127,127,127])
   exterior extent   : [-65,-65,-65] : [65,65,65]   ([130,130,130])
   spacing           : [0.5,0.5,0.5]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [261,261,261]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 629 grid functions in 45 groups
INFO (Carpet):    There are 201 grid scalars in 55 groups
INFO (Carpet):    There are 111 1-dimensional grid arrays in 10 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 2 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (SymBase): Symmetry on lower x-face: periodic
INFO (SymBase): Symmetry on upper x-face: periodic
INFO (SymBase): Symmetry on lower y-face: periodic
INFO (SymBase): Symmetry on upper y-face: periodic
INFO (SymBase): Symmetry on lower z-face: periodic
INFO (SymBase): Symmetry on upper z-face: periodic
INFO (MoL): The maximum number of evolved variables is 442. 21 are registered.
INFO (MoL): The maximum number of slow evolved variables is 442. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 442. 12 are registered.
INFO (MoL): The maximum number of SandR variables is 442. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 442. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 442. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 442. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [260,260,260]   ([261,261,261] + PADDING) 17779581
   [1][0][0]   exterior: [187,187,187] : [333,333,333]   ([147,147,147] + PADDING) 3176523
   [2][0][0]   exterior: [447,447,447] : [593,593,593]   ([147,147,147] + PADDING) 3176523
   [3][0][0]   exterior: [967,967,967] : [1113,1113,1113]   ([147,147,147] + PADDING) 3176523
   [4][0][0]   exterior: [2007,2007,2007] : [2153,2153,2153]   ([147,147,147] + PADDING) 3176523
   [5][0][0]   exterior: [4087,4087,4087] : [4233,4233,4233]   ([147,147,147] + PADDING) 3176523
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-65,-65,-65] : [65,65,65] : [0.5,0.5,0.5]
   [1][0][0]   exterior: [-18.25,-18.25,-18.25] : [18.25,18.25,18.25] : [0.25,0.25,0.25]
   [2][0][0]   exterior: [-9.125,-9.125,-9.125] : [9.125,9.125,9.125] : [0.125,0.125,0.125]
   [3][0][0]   exterior: [-4.5625,-4.5625,-4.5625] : [4.5625,4.5625,4.5625] : [0.0625,0.0625,0.0625]
   [4][0][0]   exterior: [-2.28125,-2.28125,-2.28125] : [2.28125,2.28125,2.28125] : [0.03125,0.03125,0.03125]
   [5][0][0]   exterior: [-1.140625,-1.140625,-1.140625] : [1.140625,1.140625,1.140625] : [0.015625,0.015625,0.015625]
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 4552k active, 5411k owned (+19%), 8547k total (+58%), 6 steps/time
INFO (Carpet): GF: vars: 151, pts: 4125M active, 4902M owned (+19%), 7743M total (+58%), 1.0 comp/proc
INFO (Carpet): GA: vars: 308, pts: 0M active, 0M total (+0%)
INFO (Carpet): Total required memory: 61.743 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:      17M     20M     22M      1M owned     10%
INFO (Carpet): Level  1:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  2:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  3:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  4:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  5:       4M      4M      4M      0M owned      6%
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>5.0000000e-01  dy=>5.0000000e-01  dz=>5.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-65.000,65.000]  y=>[-65.000,65.000]  z=>[-65.000,65.000]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,260]  y=>[0,260]  z=>[0,260]
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 1e-05
INFO (TwoPunctures): Attempting to find bare masses.
INFO (TwoPunctures): Target ADM masses: M_p=0.5 and M_m=0.5
INFO (TwoPunctures): ADM mass tolerance: 1e-10
INFO (TwoPunctures): Bare masses: mp=1, mm=0
INFO (TwoPunctures): ADM mass error: M_p_err=0.5, M_m_err=0.5
INFO (TwoPunctures): Bare masses: mp=0.00445218067613551, mm=0.00445218067613554
INFO (TwoPunctures): ADM mass error: M_p_err=5.55111512312578e-16, M_m_err=5.55111512312578e-16
INFO (TwoPunctures): Found bare masses.
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
INFO (TwoPunctures): The two puncture masses are mp=0.0044521806761355087 and mm=0.0044521806761355365
INFO (TwoPunctures): Puncture 1 ADM mass is 0.5
INFO (TwoPunctures): Puncture 2 ADM mass is 0.5
INFO (TwoPunctures): The total ADM mass is 0.00890436
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (TwoPunctures): Interpolating result
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   4.73532 4.72773 4.74203   meta mode/meta mode/global mode
 77.0   3.64751 3.64112 3.65129   main/Initialise/CallInitial
 67.0   3.17282 3.09650 3.22053   meta mode/meta mode/global mode/level(0)
 51.4   2.43457 2.42939 2.43787   main/CarpetStartup
 50.7   2.40103 2.39577 2.40921   main/CarpetStartup/CarpetLib::gh::regrid
 50.7   2.40014 2.39472 2.40827   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 30.2   1.42800 1.42402 1.42971   main/Initialise/CallInitial/CallRegridInitialMeta
 30.0   1.41896 1.41639 1.42128   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 24.5   1.15811 1.09334 1.30574   main/Initialise/CallInitial/CCTK_INITIAL
 24.4   1.15728 1.09268 1.30485   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 24.3   1.15143 1.14944 1.37540   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 24.3   1.14954 1.14924 1.14997   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 24.3   1.14940 1.14910 1.14985   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 24.2   1.14795 1.10532 1.28062   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
 22.5   1.06670 1.02331 1.10586   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 19.2   0.90803 0.87965 0.93142   [0084] TwoPunctures: TwoPunctures in CCTK_INITIAL
 19.2   0.90771 0.87935 0.93116   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 12.8   0.60408 0.58587 0.61645   main/Initialise/CallRestrict
  9.6   0.45410 0.45104 0.45918   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
  9.0   0.42819 0.38898 0.46890   main/Initialise/CallInitial/Poison
  8.8   0.41679 0.40239 0.46916   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/region
  8.6   0.40831 0.40524 0.41308   main/Initialise/CallAnalysis/CCTK_ANALYSIS
  8.6   0.40767 0.36826 0.43693   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
  8.5   0.40434 0.36619 0.43683   [0138] LeanBSSNMoL: LeanBSSN_bssn_constraints in CCTK_ANALYSIS
  8.5   0.40386 0.36572 0.43634   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/LeanBSSN_bssn_constraints
  8.1   0.38468 0.14734 0.46115   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/bcast_boxes
  8.1   0.38222 0.36839 0.42644   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/buffers
  7.2   0.34178 0.29933 0.42396   meta mode/meta mode/global mode/level(1)
  6.6   0.31060 0.24012 0.38823   main/Initialise/CallInitial/CCTK_POSTINITIAL
  6.5   0.31001 0.23964 0.38755   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
WARNING level 1 from host cn061.delta.ncsa.illinois.edu process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /u/adima/Code/Cactus/configs/et_canuda_uiuc/build/CarpetReduce/mask_test.cc:108:
  -> Simulation domain volume and reduction weight sum differ
  6.5   0.30636 0.29639 0.31863   meta mode/meta mode/global mode/level(3)
  6.4   0.30504 0.29420 0.33883   meta mode/meta mode/global mode/level(2)
  6.4   0.30221 0.27127 0.34439   main/Initialise/CallRestrict/CCTK_POSTRESTRICTINITIAL
  6.4   0.30166 0.27070 0.34387   main/Initialise/CallRestrict/CCTK_POSTRESTRICTINITIAL/CallFunction
  6.4   0.30152 0.28869 0.31538   meta mode/meta mode/global mode/level(4)
  6.3   0.29602 0.28911 0.30337   meta mode/meta mode/global mode/level(5)
  4.9   0.23428 0.23201 0.24634   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/mask
  4.8   0.22739 0.00142 0.23020   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/PostRegrid
  4.7   0.22166 0.21976 0.22840   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
  4.6   0.21613 0.15673 0.36852   [0094] LeanBSSNMoL: LeanBSSN_adm2bssn in CCTK_INITIAL
======================================================================
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (CarpetReduce): Simulation domain volume:  16777216
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      16581375
INFO (TimerReport): Timer Report before terminating at iteration 10 time 0.0390625
INFO (TimerReport): Top timers at iteration 10 time 0.0390625
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   65.1848 65.1484 65.4859   meta mode/meta mode/global mode
 92.1   60.0276 59.7118 60.0334   main/Evolve
 78.4   51.0723 50.9765 51.1439   main/Evolve/CallEvol
 76.8   50.0893 49.9735 50.2795   main/Evolve/CallEvol/CCTK_EVOL
 76.8   50.0661 49.9494 50.2573   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 63.0   41.0939 35.3772 44.7920   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 49.5   32.2836 31.5100 32.6917   meta mode/meta mode/global mode/level(0)
 41.0   26.7137 24.1566 29.2401   [0162] LeanBSSNMoL: LeanBSSN_CalcRHS in CCTK_EVOL
 40.9   26.6871 24.1312 29.2178   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/LeanBSSN_CalcRHS
 13.4    8.7346  4.9588 14.5188   [0170] LeanBSSNMoL: LeanBSSN_Boundaries in CCTK_EVOL
 13.4    8.7264  4.9506 14.5112   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 11.6    7.5776  3.9648 12.5128   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
 10.7    6.9665  4.4099 10.0623   [0163] LeanBSSNMoL: LeanBSSN_add_dissipation_5 in CCTK_EVOL
 10.6    6.9382  4.3887 10.0332   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/LeanBSSN_add_dissipation_5
 10.3    6.6980  6.2414  7.4848   meta mode/meta mode/global mode/level(1)
  9.8    6.3774  6.3008  6.4542   meta mode/meta mode/global mode/level(4)
  9.7    6.3522  6.2689  6.4118   meta mode/meta mode/global mode/level(3)
  9.7    6.3168  6.0986  6.5450   meta mode/meta mode/global mode/level(2)
  9.7    6.2904  6.2016  6.3639   meta mode/meta mode/global mode/level(5)
  9.2    5.9804  2.1671 11.7938   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync/comm_state[6].state_do_some_work.step
  8.6    5.5893  5.5820  5.9092   main/Initialise
  7.9    5.1686  5.1098  5.2536   main/Evolve/CallAnalysis
  7.5    4.8619  4.7875  4.9500   main/Evolve/CallAnalysis/CCTK_ANALYSIS
  7.5    4.8581  4.7843  4.9462   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction
  6.9    4.4782  4.0657  4.8454   [0138] LeanBSSNMoL: LeanBSSN_bssn_constraints in CCTK_ANALYSIS
  6.3    4.1160  3.7354  4.4095   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
  6.2    4.0692  3.6962  4.4004   main/Evolve/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/LeanBSSN_bssn_constraints
  5.6    3.6475  3.6411  3.6513   main/Initialise/CallInitial
  5.1    3.3168  3.2349  3.3972   main/Evolve/CallRestrict
  4.2    2.7553  2.4506  2.8337   main/Evolve/CallRestrict/CCTK_POSTRESTRICT
  4.2    2.7519  2.4470  2.8303   main/Evolve/CallRestrict/CCTK_POSTRESTRICT/CallFunction
  3.7    2.4346  2.4294  2.4379   main/CarpetStartup
  3.7    2.4010  2.3958  2.4092   main/CarpetStartup/CarpetLib::gh::regrid
  3.7    2.4001  2.3947  2.4083   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
  2.9    1.8963  1.2685  2.6258   [0176] LeanBSSNMoL: LeanBSSN_bssn2adm in CCTK_EVOL
  2.9    1.8803  1.2546  2.6085   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/LeanBSSN_bssn2adm
  2.7    1.7904  1.5714  2.0314   [0183] LeanBSSNMoL: LeanBSSN_Boundaries in CCTK_POSTRESTRICT
  2.7    1.7884  1.5695  2.0295   main/Evolve/CallRestrict/CCTK_POSTRESTRICT/CallFunction/syncs
  2.5    1.6599  0.9100  2.3190   [0165] MoL: MoL_Add in CCTK_EVOL
  2.5    1.6467  0.9002  2.3041   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/MoL_Add
======================================================================
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.01989200 |       0.00987100 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.11080100 |       0.09899200 |   0.00000241 |        0.00000241 |        0.00000000 |        0.00000241 |        0.00000241 
LoopControl     | Set up LoopControl                      |          0.00368300 |       0.00000000 |   0.00336271 |        0.00336271 |        0.00000000 |        0.00336271 |        0.00336271 
Timers          | Prepare hierarchical timers             |          0.00365000 |       0.00000000 |   0.00333117 |        0.00333117 |        0.00000000 |        0.00333117 |        0.00333117 
Carpet          | Startup routine                         |          0.00000200 |       0.00000000 |   0.00000171 |        0.00000171 |        0.00000000 |        0.00000171 |        0.00000171 
IOUtil          | Startup routine                         |          0.00115400 |       0.00000000 |   0.00105423 |        0.00105423 |        0.00000000 |        0.00105423 |        0.00105423 
CarpetIOScalar  | Startup routine                         |          0.00007600 |       0.00000000 |   0.00006987 |        0.00006987 |        0.00000000 |        0.00006987 |        0.00006987 
CarpetInterp    | Startup routine                         |          0.00051700 |       0.00000000 |   0.00047171 |        0.00047171 |        0.00000000 |        0.00047171 |        0.00047171 
CarpetReduce    | Startup routine                         |          0.00077300 |       0.00000000 |   0.00070645 |        0.00070645 |        0.00000000 |        0.00070645 |        0.00070645 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000100 |       0.00000000 |   0.00000091 |        0.00000091 |        0.00000000 |        0.00000091 |        0.00000091 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000000 |   0.00000080 |        0.00000080 |        0.00000000 |        0.00000080 |        0.00000080 
AEILocalInterp  | register CCTK_InterpLocalUniform() inter|          0.00000200 |       0.00000000 |   0.00000212 |        0.00000212 |        0.00000000 |        0.00000212 |        0.00000212 
CarpetIOASCII   | Startup routine                         |          0.00087600 |       0.00000000 |   0.00080037 |        0.00080037 |        0.00000000 |        0.00080037 |        0.00080037 
LeanBSSNMoL     | Register slicing                        |          0.00003500 |       0.00000000 |   0.00003153 |        0.00003153 |        0.00000000 |        0.00003153 |        0.00003153 
LocalInterp     | register LocalInterp's interpolation ope|          0.00000100 |       0.00000000 |   0.00000101 |        0.00000101 |        0.00000000 |        0.00000101 |        0.00000101 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000000 |   0.00000311 |        0.00000311 |        0.00000000 |        0.00000311 |        0.00000311 
MoL             | Startup banner                          |          0.00000100 |       0.00000000 |   0.00000097 |        0.00000097 |        0.00000000 |        0.00000097 |        0.00000097 
Slab            | Create MPI datatypes for complex variabl|          0.00000400 |       0.00000000 |   0.00000344 |        0.00000344 |        0.00000000 |        0.00000344 |        0.00000344 
SymBase         | Register GH Extension for SymBase       |          0.00000700 |       0.00000000 |   0.00000625 |        0.00000625 |        0.00000000 |        0.00000625 |        0.00000625 
TerminationTrigg| Start signal handler                    |          0.00001900 |       0.00000000 |   0.00001728 |        0.00001728 |        0.00000000 |        0.00001728 |        0.00001728 
CarpetIOHDF5    | Startup routine                         |          0.00155300 |       0.00000000 |   0.00141773 |        0.00141773 |        0.00000000 |        0.00141773 |        0.00141773 
Vectors         | Print startup message                   |          0.00000200 |       0.00000000 |   0.00000173 |        0.00000173 |        0.00000000 |        0.00000173 |        0.00000173 
hwloc           | Output hwloc version                    |          0.00000300 |       0.00000000 |   0.00000282 |        0.00000282 |        0.00000000 |        0.00000282 |        0.00000282 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.14305600 |       0.10886300 |   0.01129034 |        0.01129034 |        0.00000000 |        0.01129034 |        0.01129034 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00039100 |       0.00000000 |   0.00035654 |        0.00035654 |        0.00000000 |        0.00035654 |        0.00035654 
Boundary        | Register boundary conditions that this t|          0.00007400 |       0.00000000 |   0.00006739 |        0.00006739 |        0.00000000 |        0.00006739 |        0.00006739 
CarpetRegrid2   | Initialise locations of refined regions |          0.00037700 |       0.00000000 |   0.00034431 |        0.00034431 |        0.00000000 |        0.00034431 |        0.00034431 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00006200 |       0.00000000 |   0.00005640 |        0.00005640 |        0.00000000 |        0.00005640 |        0.00005640 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001300 |       0.00000000 |   0.00001203 |        0.00001203 |        0.00000000 |        0.00001203 |        0.00001203 
CoordGauge      | Identify the slicing for the next iterat|          0.00000500 |       0.00000000 |   0.00000516 |        0.00000516 |        0.00000000 |        0.00000516 |        0.00000516 
MoL             | Set up the MoL bookkeeping index arrays |          0.00013300 |       0.00000000 |   0.00012133 |        0.00012133 |        0.00000000 |        0.00012133 |        0.00012133 
MoL             | Set the flag so it is ok to register wit|          0.00010300 |       0.00000000 |   0.00009401 |        0.00009401 |        0.00000000 |        0.00009401 |        0.00009401 
TmunuBase       | Set the stress_energy_state variable    |          0.00027400 |       0.00000000 |   0.00024945 |        0.00024945 |        0.00000000 |        0.00024945 |        0.00024945 
LeanBSSNMoL     | Register variables for MoL              |          0.00063900 |       0.00000000 |   0.00058318 |        0.00058318 |        0.00000000 |        0.00058318 |        0.00058318 
Slab            | Initialise timers                       |          0.00006800 |       0.00000000 |   0.00006183 |        0.00006183 |        0.00000000 |        0.00006183 |        0.00006183 
CartGrid3D      | Register symmetry boundaries            |          0.00007700 |       0.00000000 |   0.00007001 |        0.00007001 |        0.00000000 |        0.00007001 |        0.00007001 
PeriodicCarpet  | Register periodic boundary conditions   |          0.00009900 |       0.00000000 |   0.00008973 |        0.00008973 |        0.00000000 |        0.00008973 |        0.00008973 
ReflectionSymmet| Register reflection symmetry boundaries |          0.00005100 |       0.00000000 |   0.00004705 |        0.00004705 |        0.00000000 |        0.00004705 |        0.00004705 
SymBase         | Print symmetry boundary face description|          0.00000800 |       0.00000000 |   0.00000771 |        0.00000771 |        0.00000000 |        0.00000771 |        0.00000771 
MoL             | Report how many of each type of variable|          0.00011800 |       0.00000000 |   0.00010829 |        0.00010829 |        0.00000000 |        0.00010829 |        0.00010829 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00249200 |       0.00000000 |   0.00227441 |        0.00227441 |        0.00000000 |        0.00227441 |        0.00227441 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00000900 |       0.00000000 |   0.00000757 |        0.00000757 |        0.00000000 |        0.00000757 |        0.00000757 
Boundary        | Check dimension of grid variables       |          0.00000500 |       0.00000000 |   0.00000436 |        0.00000436 |        0.00000000 |        0.00000436 |        0.00000436 
Carpet          | Parameter checking routine              |          0.00002400 |       0.00000000 |   0.00002210 |        0.00002210 |        0.00000000 |        0.00002210 |        0.00002210 
CarpetLib       | Test prolongation operators             |          0.00060700 |       0.00000000 |   0.00055356 |        0.00055356 |        0.00000000 |        0.00055356 |        0.00055356 
CarpetMask      | Check parameters                        |          0.00023100 |       0.00000000 |   0.00021095 |        0.00021095 |        0.00000000 |        0.00021095 |        0.00021095 
CarpetRegrid2   | Check parameters                        |          0.00002900 |       0.00000000 |   0.00002634 |        0.00002634 |        0.00000000 |        0.00002634 |        0.00002634 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00000700 |       0.00000000 |   0.00000572 |        0.00000572 |        0.00000000 |        0.00000572 |        0.00000572 
Dissipation     | Check dissipation parameters for consist|          0.00002600 |       0.00000000 |   0.00002363 |        0.00002363 |        0.00000000 |        0.00002363 |        0.00002363 
Fortran         | Test whether Fortran parameters work cor|          0.00000800 |       0.00000000 |   0.00000756 |        0.00000756 |        0.00000000 |        0.00000756 |        0.00000756 
LeanBSSNMoL     | Check Lean parameters for consistency   |          0.00000600 |       0.00000000 |   0.00000535 |        0.00000535 |        0.00000000 |        0.00000535 |        0.00000535 
MoL             | Basic parameter checking                |          0.00003800 |       0.00000000 |   0.00003481 |        0.00003481 |        0.00000000 |        0.00003481 |        0.00003481 
PeriodicCarpet  | Register periodic boundary conditions   |          0.00000600 |       0.00000000 |   0.00000471 |        0.00000471 |        0.00000000 |        0.00000471 |        0.00000471 
SphericalSurface| Check that all surface names are unique |          0.00003600 |       0.00000000 |   0.00003299 |        0.00003299 |        0.00000000 |        0.00003299 |        0.00003299 
TerminationTrigg| Check consitency of parameters          |          0.00000500 |       0.00000000 |   0.00000463 |        0.00000463 |        0.00000000 |        0.00000463 |        0.00000463 
TmunuBase       | Check that no deprecated parameters are |          0.00000500 |       0.00000000 |   0.00000443 |        0.00000443 |        0.00000000 |        0.00000443 |        0.00000443 
TwoPunctures    | Check parameters and thorn needs        |          0.00002100 |       0.00000000 |   0.00001848 |        0.00001848 |        0.00000000 |        0.00001848 |        0.00001848 
Vectors         | Run correctness tests.                  |          0.00026800 |       0.00000000 |   0.00024500 |        0.00024500 |        0.00000000 |        0.00024500 |        0.00024500 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00133100 |       0.00000000 |   0.00121221 |        0.00121221 |        0.00000000 |        0.00121221 |        0.00121221 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00099800 |       0.00079500 |   0.00091084 |        0.00015181 |        0.00005822 |        0.00010101 |        0.00017198 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00011700 |       0.00009300 |   0.00010699 |        0.00001783 |        0.00000498 |        0.00001562 |        0.00002172 
ADMBase         | Set the dtshift_state variable to 1     |          0.00010400 |       0.00008500 |   0.00009368 |        0.00001561 |        0.00000564 |        0.00001410 |        0.00002066 
ADMMacros       | Initialize the local_spatial_order      |          0.00012000 |       0.00010100 |   0.00011012 |        0.00001835 |        0.00000953 |        0.00001457 |        0.00002638 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00024400 |       0.00023900 |   0.00022074 |        0.00003679 |        0.00009567 |        0.00001694 |        0.00012406 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00870100 |       0.00848900 |   0.00794353 |        0.00132392 |        0.00214454 |        0.00068922 |        0.00326220 
SphericalSurface| Set surface resolution automatically    |          0.00041500 |       0.00041500 |   0.00037826 |        0.00006304 |        0.00033570 |        0.00000139 |        0.00036949 
Dissipation     | Ensure that there are enough ghost zones|          0.00207100 |       0.00186600 |   0.00189096 |        0.00031516 |        0.00064459 |        0.00017417 |        0.00090182 
LeanBSSNMoL     | Register symmetries of the BSSN grid fun|          0.00026300 |       0.00025900 |   0.00023752 |        0.00003959 |        0.00020863 |        0.00000141 |        0.00023004 
LeanBSSNMoL     | Set all rhs functions to zero to prevent|          0.03682300 |       0.03169500 |   0.03360986 |        0.00560164 |        0.01073201 |        0.00247806 |        0.01531608 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00004600 |       0.00004700 |   0.00004292 |        0.00000715 |        0.00002851 |        0.00000154 |        0.00003317 
SphericalSurface| Calculate surface coordinate descriptors|          0.00002300 |       0.00002200 |   0.00002047 |        0.00000341 |        0.00001045 |        0.00000123 |        0.00001294 
CarpetReduce    | Allocate the weight function            |          0.00026300 |       0.00024600 |   0.00023638 |        0.00003940 |        0.00020716 |        0.00000130 |        0.00022851 
CarpetReduce    | Initialise the weight function          |          0.00299000 |       0.00295400 |   0.00272622 |        0.00045437 |        0.00248136 |        0.00000119 |        0.00271953 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00170600 |       0.00169600 |   0.00155720 |        0.00025953 |        0.00141311 |        0.00000140 |        0.00154952 
CarpetReduce    | Set up the weight function for the restr|          0.00152800 |       0.00151200 |   0.00139629 |        0.00023272 |        0.00126545 |        0.00000133 |        0.00138791 
CarpetMask      | Set up the weight function for the exclu|          0.00015500 |       0.00015400 |   0.00014082 |        0.00002347 |        0.00012038 |        0.00000125 |        0.00013336 
CarpetMask      | Set up the weight function for the exclu|          0.00014200 |       0.00014200 |   0.00012958 |        0.00002160 |        0.00010929 |        0.00000136 |        0.00012136 
CarpetReduce    | Set the weight function                 |          0.00740000 |       0.00532600 |   0.00675492 |        0.00112582 |        0.00615878 |        0.00000117 |        0.00674799 
CarpetReduce    | Test the weight function                |          0.02969000 |       0.02859700 |   0.02710045 |        0.00451674 |        0.02473086 |        0.00000119 |        0.02709283 
SphericalSurface| Set surface radii to be used for initial|          0.00002600 |       0.00002300 |   0.00002344 |        0.00000391 |        0.00001336 |        0.00000133 |        0.00001610 
SphericalSurface| Test the state of the spherical surfaces|          0.00002000 |       0.00001900 |   0.00001816 |        0.00000303 |        0.00000950 |        0.00000116 |        0.00001170 
SymBase         | Check whether the driver set up the grid|          0.00031600 |       0.00029500 |   0.00028827 |        0.00004804 |        0.00006364 |        0.00002377 |        0.00010236 
TerminationTrigg| Clear trigger state                     |          0.00012000 |       0.00010800 |   0.00010880 |        0.00001813 |        0.00000342 |        0.00001641 |        0.00002018 
TerminationTrigg| Start timer                             |          0.00021900 |       0.00019900 |   0.00019893 |        0.00003316 |        0.00002327 |        0.00002079 |        0.00005108 
Time            | Initialise Time variables               |          0.00002300 |       0.00001800 |   0.00001869 |        0.00000312 |        0.00000985 |        0.00000116 |        0.00001210 
Time            | Set fixed timestep                      |          0.00005800 |       0.00005100 |   0.00005094 |        0.00000849 |        0.00000323 |        0.00000630 |        0.00000995 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.09458100 |       0.08544600 |   0.08631501 |        0.01438583 |        0.05089113 |        0.00359035 |        0.06069503 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00013900 |       0.00012200 |   0.00012537 |        0.00002090 |        0.00000663 |        0.00001687 |        0.00002546 
TwoPunctures    | Create puncture black hole initial data |          0.90813300 |       0.89656400 |   0.82890226 |        0.13815038 |        0.54485870 |        0.03781556 |        0.63553447 
TwoPunctures    | Output TwoPunctures metadata            |          0.03678200 |       0.00055400 |   0.03357286 |        0.00559548 |        0.03063688 |        0.00000166 |        0.03356300 
ADMBase         | Set the lapse to 1 at all points        |          0.00241600 |       0.00186900 |   0.00220288 |        0.00036715 |        0.00044421 |        0.00010435 |        0.00058944 
ADMBase         | Set the shift to 0 at all points        |          0.00687100 |       0.00524000 |   0.00627068 |        0.00104511 |        0.00179305 |        0.00020867 |        0.00236473 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00240500 |       0.00233100 |   0.00219254 |        0.00036542 |        0.00055197 |        0.00007922 |        0.00065836 
ADMBase         | Set the dtshift to 0 at all points      |          0.00838000 |       0.00827800 |   0.00764752 |        0.00127459 |        0.00220275 |        0.00020144 |        0.00226263 
CarpetIOASCII   | Initialisation routine                  |          0.00003100 |       0.00003300 |   0.00002852 |        0.00000475 |        0.00001735 |        0.00000130 |        0.00002058 
CarpetIOBasic   | Initialisation routine                  |          0.00002400 |       0.00002500 |   0.00002122 |        0.00000354 |        0.00001171 |        0.00000121 |        0.00001422 
CarpetIOHDF5    | Initialisation routine                  |          0.00002300 |       0.00002500 |   0.00002134 |        0.00000356 |        0.00001145 |        0.00000127 |        0.00001400 
CarpetIOScalar  | Initialisation routine                  |          0.00002200 |       0.00002100 |   0.00001956 |        0.00000326 |        0.00001100 |        0.00000118 |        0.00001330 
LeanBSSNMoL     | Convert initial data into BSSN variables|          0.17533800 |       0.16280800 |   0.16004106 |        0.02667351 |        0.02220105 |        0.01812838 |        0.04491146 
MoL             | Initialise the step size control        |          0.00007800 |       0.00005500 |   0.00006878 |        0.00001146 |        0.00001104 |        0.00000708 |        0.00001978 
Boundary        | Apply all requested local physical bound|          0.00064000 |       0.00055800 |   0.00058355 |        0.00009726 |        0.00014666 |        0.00005159 |        0.00022687 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00013500 |       0.00009400 |   0.00012254 |        0.00002042 |        0.00001242 |        0.00001725 |        0.00003158 
PeriodicCarpet  | Apply periodic boundary conditions      |          0.00012100 |       0.00008500 |   0.00010962 |        0.00001827 |        0.00000749 |        0.00001534 |        0.00002413 
ReflectionSymmet| Apply reflection symmetries             |          0.00010800 |       0.00007800 |   0.00009877 |        0.00001646 |        0.00000508 |        0.00001513 |        0.00002105 
Boundary        | Unselect all grid variables for boundary|          0.00003300 |       0.00002300 |   0.00003031 |        0.00000505 |        0.00000307 |        0.00000372 |        0.00000717 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          1.14167900 |       1.07876300 |   1.04205940 |        0.17367657 |        0.60293253 |        0.05667122 |        0.72030224 
==================================================================================================================================================================================================
CarpetIOHDF5    | Close all filereader input files        |          0.00005200 |       0.00000900 |   0.00004634 |        0.00000772 |        0.00003115 |        0.00000157 |        0.00003613 
LeanBSSNMoL     | Remove trace of A                       |          0.01798300 |       0.01721800 |   0.01641518 |        0.00273586 |        0.00439530 |        0.00180988 |        0.00674361 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.00148300 |       0.00139800 |   0.00135442 |        0.00022574 |        0.00017819 |        0.00009239 |        0.00030478 
LeanBSSNMoL     | MoL boundary enforcement                |          0.13388200 |       0.11203600 |   0.12220243 |        0.02036707 |        0.01011726 |        0.01698446 |        0.02902223 
Boundary        | Apply all requested local physical bound|          0.00077600 |       0.00071300 |   0.00070777 |        0.00011796 |        0.00008307 |        0.00005689 |        0.00016566 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00015600 |       0.00013600 |   0.00014083 |        0.00002347 |        0.00000956 |        0.00001862 |        0.00003047 
PeriodicCarpet  | Apply periodic boundary conditions      |          0.07624400 |       0.06641600 |   0.06959214 |        0.01159869 |        0.04407106 |        0.00176896 |        0.05177305 
ReflectionSymmet| Apply reflection symmetries             |          0.00040700 |       0.00036000 |   0.00036813 |        0.00006135 |        0.00013697 |        0.00003371 |        0.00018631 
Boundary        | Unselect all grid variables for boundary|          0.00004100 |       0.00003500 |   0.00003637 |        0.00000606 |        0.00000777 |        0.00000413 |        0.00001313 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.06902700 |       0.06746900 |   0.06300648 |        0.01050108 |        0.01799723 |        0.00686978 |        0.02691653 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.30005100 |       0.26579000 |   0.27387008 |        0.04564501 |        0.07702757 |        0.02764039 |        0.11519190 
==================================================================================================================================================================================================
LeanBSSNMoL     | Remove trace of A                       |          0.02439400 |       0.02418200 |   0.02226600 |        0.00371100 |        0.00444294 |        0.00258493 |        0.00774199 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.00202500 |       0.00200700 |   0.00184888 |        0.00030815 |        0.00026363 |        0.00022134 |        0.00053726 
LeanBSSNMoL     | MoL boundary enforcement                |          0.18574900 |       0.16773000 |   0.16954249 |        0.02825708 |        0.02383620 |        0.02022115 |        0.04756568 
Boundary        | Apply all requested local physical bound|          0.00107900 |       0.00100400 |   0.00098326 |        0.00016388 |        0.00002793 |        0.00014961 |        0.00018053 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00017900 |       0.00017800 |   0.00016253 |        0.00002709 |        0.00002479 |        0.00002031 |        0.00004907 
PeriodicCarpet  | Apply periodic boundary conditions      |          0.03046000 |       0.02324400 |   0.02780188 |        0.00463365 |        0.02526967 |        0.00001936 |        0.02770160 
ReflectionSymmet| Apply reflection symmetries             |          0.00031500 |       0.00029200 |   0.00028747 |        0.00004791 |        0.00009350 |        0.00002969 |        0.00013322 
Boundary        | Unselect all grid variables for boundary|          0.00004500 |       0.00004100 |   0.00004004 |        0.00000667 |        0.00000551 |        0.00000480 |        0.00001146 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.06052700 |       0.05910300 |   0.05524758 |        0.00920793 |        0.02249192 |        0.00256476 |        0.02937004 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTRESTRICTINITIAL |          0.30477300 |       0.27778100 |   0.27818012 |        0.04636335 |        0.07645609 |        0.02581594 |        0.11329085 
==================================================================================================================================================================================================
CarpetIOHDF5    | Initial data checkpoint routine         |          0.00014200 |       0.00011800 |   0.00012975 |        0.00002163 |        0.00009659 |        0.00000214 |        0.00010966 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CPINITIAL           |          0.00014200 |       0.00011800 |   0.00012975 |        0.00002163 |        0.00009659 |        0.00000214 |        0.00010966 
==================================================================================================================================================================================================
CarpetTracker   | Set positions of refined regions        |          0.00059500 |       0.00040100 |   0.00053575 |        0.00000893 |        0.00003380 |        0.00000691 |        0.00003726 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PREREGRID           |          0.00059500 |       0.00040100 |   0.00053575 |        0.00000893 |        0.00003380 |        0.00000691 |        0.00003726 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00275100 |       0.00214900 |   0.00249806 |        0.00004163 |        0.00008015 |        0.00002481 |        0.00007202 
LoopControl     | Update LoopControl algorithm preferences|          0.00418000 |       0.00402900 |   0.00380611 |        0.00006344 |        0.00113035 |        0.00000120 |        0.00054991 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00027400 |       0.00022800 |   0.00025474 |        0.00000425 |        0.00003727 |        0.00000138 |        0.00002539 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00720500 |       0.00640600 |   0.00655891 |        0.00010932 |        0.00124777 |        0.00002739 |        0.00064732 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00062400 |       0.00051400 |   0.00057009 |        0.00000950 |        0.00001403 |        0.00000474 |        0.00001786 
MoL             | Set the counter for the ODE method to lo|          0.00063500 |       0.00055000 |   0.00057926 |        0.00000965 |        0.00001970 |        0.00000674 |        0.00001743 
MoL             | Ensure the correct time and timestep are|          0.00035000 |       0.00031900 |   0.00033833 |        0.00000564 |        0.00001323 |        0.00000393 |        0.00001651 
MoL             | Allocate storage for scratch levels     |          0.00817100 |       0.00756000 |   0.00744963 |        0.00012416 |        0.00102499 |        0.00003152 |        0.00048401 
MoL             | Allocate sufficient space for array scra|          0.00148000 |       0.00132800 |   0.00134222 |        0.00002237 |        0.00005474 |        0.00001758 |        0.00005262 
MoL             | Ensure the data is in the correct timele|          1.08803600 |       0.99730800 |   0.99310949 |        0.01655182 |        0.10043529 |        0.00198875 |        0.04817200 
MoL             | Initialise the RHS functions            |          1.14257300 |       1.09650100 |   1.04286664 |        0.00434528 |        0.07123933 |        0.00050256 |        0.01910859 
LeanBSSNMoL     | MoL RHS calculation                     |         25.35357500 |      25.11933600 |  23.14156517 |        0.09642319 |        1.26825730 |        0.05642953 |        0.31132500 
LeanBSSNMoL     | Kreiss-Oliger dissipation               |          5.50582400 |       5.43312700 |   5.02548045 |        0.02093950 |        0.29001721 |        0.00994308 |        0.07174761 
Dissipation     | Add Kreiss-Oliger dissipation to the rig|          0.02619700 |       0.02528400 |   0.02389925 |        0.00009958 |        0.00052025 |        0.00004698 |        0.00024258 
MoL             | Updates calculated with the efficient Ru|          1.24957600 |       1.12104500 |   1.14056219 |        0.00475234 |        0.06710451 |        0.00136393 |        0.02419559 
MoL             | Alter the counter number                |          0.00232300 |       0.00227700 |   0.00210807 |        0.00000878 |        0.00004457 |        0.00000559 |        0.00002710 
MoL             | If necessary, change the time           |          0.00148800 |       0.00146100 |   0.00135814 |        0.00000566 |        0.00002236 |        0.00000354 |        0.00001413 
LeanBSSNMoL     | Remove trace of A                       |          0.70716500 |       0.69808700 |   0.64549108 |        0.00268955 |        0.02597810 |        0.00165038 |        0.00746894 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.04797500 |       0.04674900 |   0.04376151 |        0.00018234 |        0.00128324 |        0.00007886 |        0.00051368 
LeanBSSNMoL     | MoL boundary enforcement                |         10.49515200 |       9.93055500 |   9.57953151 |        0.03991471 |        0.50641031 |        0.00256222 |        0.16595384 
Boundary        | Apply all requested local physical bound|          0.03503300 |       0.03358200 |   0.03196592 |        0.00013319 |        0.00105468 |        0.00005269 |        0.00069949 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00636200 |       0.00609000 |   0.00579201 |        0.00002413 |        0.00020313 |        0.00001746 |        0.00017883 
PeriodicCarpet  | Apply periodic boundary conditions      |          2.54556700 |       2.39466100 |   2.32348972 |        0.00968121 |        0.35848538 |        0.00001843 |        0.10614752 
ReflectionSymmet| Apply reflection symmetries             |          0.01301400 |       0.01248500 |   0.01183679 |        0.00004932 |        0.00057746 |        0.00002439 |        0.00020162 
Boundary        | Unselect all grid variables for boundary|          0.00149700 |       0.00142300 |   0.00136650 |        0.00000569 |        0.00003491 |        0.00000334 |        0.00002740 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          1.92242700 |       1.85943100 |   1.75474441 |        0.00731144 |        0.14143074 |        0.00116345 |        0.03771361 
MoL             | If necessary, change the timestep       |          0.00269200 |       0.00257900 |   0.00241290 |        0.00001005 |        0.00006584 |        0.00000495 |        0.00005159 
MoL             | Control the step size                   |          0.00043300 |       0.00040700 |   0.00038665 |        0.00000644 |        0.00001912 |        0.00000442 |        0.00002352 
MoL             | Restoring the Save and Restore variables|          0.00669400 |       0.00639000 |   0.00609532 |        0.00010159 |        0.00028793 |        0.00003427 |        0.00016099 
MoL             | Free storage for scratch levels         |          0.00400500 |       0.00382500 |   0.00365219 |        0.00006087 |        0.00017589 |        0.00002775 |        0.00015328 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |         50.16886800 |      48.80287400 |  45.79175546 |        0.20346802 |        2.83477422 |        0.07599108 |        0.79471532 
==================================================================================================================================================================================================
LeanBSSNMoL     | Remove trace of A                       |          0.22396700 |       0.21681500 |   0.20442532 |        0.00340709 |        0.01687309 |        0.00169266 |        0.01250131 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.01730700 |       0.01709300 |   0.01579378 |        0.00026323 |        0.00146925 |        0.00008179 |        0.00129356 
LeanBSSNMoL     | MoL boundary enforcement                |          1.65040000 |       1.46486100 |   1.50642886 |        0.02510715 |        0.04455784 |        0.01676534 |        0.03855438 
Boundary        | Apply all requested local physical bound|          0.01101500 |       0.01033200 |   0.01005205 |        0.00016753 |        0.00022903 |        0.00010405 |        0.00028825 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00146600 |       0.00139400 |   0.00133698 |        0.00002228 |        0.00002142 |        0.00001817 |        0.00003145 
PeriodicCarpet  | Apply periodic boundary conditions      |          0.25917100 |       0.20614600 |   0.23655773 |        0.00394263 |        0.06819095 |        0.00001780 |        0.02566689 
ReflectionSymmet| Apply reflection symmetries             |          0.00314400 |       0.00299800 |   0.00286873 |        0.00004781 |        0.00026302 |        0.00002644 |        0.00014226 
Boundary        | Unselect all grid variables for boundary|          0.00051200 |       0.00047500 |   0.00046476 |        0.00000775 |        0.00001747 |        0.00000477 |        0.00001717 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.60206100 |       0.58850200 |   0.54955372 |        0.00915923 |        0.06527916 |        0.00229841 |        0.03031324 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTRESTRICT        |          2.76904300 |       2.50861600 |   2.52748192 |        0.04212470 |        0.19690123 |        0.02100943 |        0.10880851 
==================================================================================================================================================================================================
SphericalSurface| Set surface radii                       |          0.00058400 |       0.00037000 |   0.00052294 |        0.00000792 |        0.00017045 |        0.00000135 |        0.00014909 
SphericalSurface| Test the state of the spherical surfaces|          0.00023000 |       0.00017500 |   0.00019913 |        0.00000302 |        0.00002897 |        0.00000123 |        0.00001790 
NaNChecker      | Prepare data structures to check for NaN|          0.00043800 |       0.00037800 |   0.00039779 |        0.00000603 |        0.00002679 |        0.00000311 |        0.00001930 
NaNChecker      | Check for NaNs                          |          0.00442500 |       0.00389900 |   0.00403310 |        0.00006111 |        0.00039757 |        0.00002860 |        0.00040735 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00031900 |       0.00027500 |   0.00028573 |        0.00000433 |        0.00000800 |        0.00000309 |        0.00000916 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00076000 |       0.00049300 |   0.00068779 |        0.00001042 |        0.00018559 |        0.00000108 |        0.00013818 
Dissipation     | Setup spatially varying dissipation     |          0.15534800 |       0.14512600 |   0.14179859 |        0.00214846 |        0.02241099 |        0.00017411 |        0.01339086 
CarpetReduce    | Allocate the weight function            |          0.00087900 |       0.00077100 |   0.00079924 |        0.00001211 |        0.00022246 |        0.00000124 |        0.00014043 
CarpetReduce    | Initialise the weight function          |          0.01727600 |       0.01454900 |   0.01576421 |        0.00023885 |        0.00433001 |        0.00000113 |        0.00175854 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00896300 |       0.00844600 |   0.00817854 |        0.00012392 |        0.00223736 |        0.00000116 |        0.00091542 
CarpetReduce    | Set up the weight function for the restr|          0.01230900 |       0.01139100 |   0.01123548 |        0.00017023 |        0.00307909 |        0.00000114 |        0.00116899 
CarpetMask      | Set up the weight function for the exclu|          0.00168300 |       0.00167400 |   0.00154492 |        0.00002341 |        0.00040054 |        0.00000114 |        0.00014559 
CarpetMask      | Set up the weight function for the exclu|          0.00169900 |       0.00153000 |   0.00154699 |        0.00002344 |        0.00040185 |        0.00000113 |        0.00016023 
CarpetReduce    | Set the weight function                 |          0.04649100 |       0.04097200 |   0.04242524 |        0.00064281 |        0.01220429 |        0.00000118 |        0.00506545 
CarpetReduce    | Test the weight function                |          0.10572400 |       0.10214800 |   0.09649269 |        0.00146201 |        0.03209174 |        0.00000106 |        0.01585211 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.35712800 |       0.33219700 |   0.32591235 |        0.00493807 |        0.07819572 |        0.00022178 |        0.03933861 
==================================================================================================================================================================================================
CarpetIOHDF5    | Evolution checkpoint routine            |          0.00229000 |       0.00130400 |   0.00208410 |        0.00003474 |        0.00071739 |        0.00000127 |        0.00045205 
TimerReport     | Print the timer report                  |          0.00016700 |       0.00015900 |   0.00015367 |        0.00000256 |        0.00002340 |        0.00000108 |        0.00001597 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CHECKPOINT          |          0.00245700 |       0.00146300 |   0.00223777 |        0.00003730 |        0.00074078 |        0.00000235 |        0.00046802 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00024200 |       0.00022500 |   0.00020909 |        0.00000317 |        0.00002862 |        0.00000115 |        0.00001710 
CarpetLib       | Print memory statistics if desired      |          0.00019800 |       0.00018100 |   0.00016860 |        0.00000255 |        0.00002274 |        0.00000108 |        0.00001392 
LeanBSSNMoL     | Compute constraints                     |          4.32091200 |       4.27134600 |   3.94393799 |        0.05975664 |        0.41562470 |        0.03492930 |        0.17513730 
LeanBSSNMoL     | Enforce symmetry BCs in constraint compu|          0.83728300 |       0.75339300 |   0.76424518 |        0.01157947 |        0.08103942 |        0.00188762 |        0.04846651 
Boundary        | Apply all requested local physical bound|          0.00692200 |       0.00555100 |   0.00630632 |        0.00009555 |        0.00034903 |        0.00006106 |        0.00030786 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00147900 |       0.00120000 |   0.00136031 |        0.00002061 |        0.00002563 |        0.00001639 |        0.00003272 
PeriodicCarpet  | Apply periodic boundary conditions      |          0.10336100 |       0.09633100 |   0.09434713 |        0.00142950 |        0.02591207 |        0.00001599 |        0.01126637 
ReflectionSymmet| Apply reflection symmetries             |          0.00224900 |       0.00197000 |   0.00204698 |        0.00003101 |        0.00021975 |        0.00001694 |        0.00019830 
Boundary        | Unselect all grid variables for boundary|          0.00040000 |       0.00029500 |   0.00033807 |        0.00000512 |        0.00001880 |        0.00000357 |        0.00001672 
LoopControl     | Output LoopControl statistics           |          0.00188100 |       0.00106600 |   0.00171275 |        0.00002595 |        0.00045716 |        0.00000122 |        0.00019172 
SystemStatistics| Collect system statistics               |          0.00319900 |       0.00143600 |   0.00291794 |        0.00004421 |        0.00108393 |        0.00000114 |        0.00087132 
TerminationTrigg| Check elapsed job walltime              |          0.00139100 |       0.00113100 |   0.00127094 |        0.00001926 |        0.00005978 |        0.00001377 |        0.00006017 
TerminationTrigg| Check if we received a termination signa|          0.00153600 |       0.00127200 |   0.00139316 |        0.00002111 |        0.00012420 |        0.00001474 |        0.00012934 
TerminationTrigg| Check termination file                  |          0.00113300 |       0.00093100 |   0.00103185 |        0.00001563 |        0.00001907 |        0.00001308 |        0.00002629 
TimerReport     | Print the timer report                  |          1.14839200 |       0.96102100 |   1.04819911 |        0.01588180 |        1.04005558 |        0.00000111 |        1.04802810 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          6.43057800 |       6.09734900 |   5.86948542 |        0.08893160 |        1.56504048 |        0.03697814 |        1.28476374 
==================================================================================================================================================================================================
CarpetIOHDF5    | Termination checkpoint routine          |          0.00014100 |       0.00013100 |   0.00012728 |        0.00002121 |        0.00009524 |        0.00000153 |        0.00010769 
LoopControl     | Output LoopControl statistics           |          0.00010300 |       0.00010300 |   0.00009407 |        0.00001568 |        0.00007938 |        0.00000113 |        0.00008815 
MoL             | Free the MoL bookkeeping index arrays   |          0.00023300 |       0.00023200 |   0.00021085 |        0.00003514 |        0.00001006 |        0.00003103 |        0.00004343 
TimerReport     | Print the timer report                  |          2.35952100 |       2.09378900 |   2.15366304 |        0.35894384 |        1.96600979 |        0.00000113 |        2.15365703 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          2.35999800 |       2.09425500 |   2.15409524 |        0.35901587 |        1.96619448 |        0.00003482 |        2.15389629 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00048900 |       0.00048100 |   0.00044694 |        0.00044694 |        0.00000000 |        0.00044694 |        0.00044694 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00048900 |       0.00048100 |   0.00044694 |        0.00044694 |        0.00000000 |        0.00044694 |        0.00044694 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |         67.98158500 |      64.61136000 |  62.05044892 |       62.05044892 |        0.00000000 |       62.05044892 |       62.05044892 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
