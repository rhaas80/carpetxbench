--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.12.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.12.0
Compile date:      Jul 10 2023 (17:20:58)
Run date:          Jul 10 2023 (17:48:20-0500)
Run host:          cn101.delta.ncsa.illinois.edu (pid=180143)
Working directory: /scratch/bbgz/adima/test_canudax/2Punc_Lean
Executable:        /u/adima/Code/Cactus/exe/cactus_et_lean
Parameter file:    2Punc_Lean.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->ADMBase ADMCoupling ADMMacros AEILocalInterp Boundary Carpet CarpetInterp CarpetIOASCII CarpetIOBasic CarpetIOHDF5 CarpetIOScalar CarpetLib CarpetMask CarpetReduce CarpetRegrid2 CarpetSlab CarpetTracker CartGrid3D CoordBase CoordGauge Dissipation Fortran GSL HDF5 InitBase IOUtil LeanBSSNMoL LocalInterp LoopControl MoL NaNChecker NewRad ReflectionSymmetry Slab SpaceMask SphericalSurface StaticConformal SymBase SystemStatistics TerminationTrigger Time TimerReport TmunuBase TwoPunctures<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn HDF5 requests automatic activation of zlib
Thorn LoopControl requests automatic activation of hwloc
Thorn NewRad requests automatic activation of GenericFD
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMCoupling...Success -> active implementation ADMCoupling
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetMask...Success -> active implementation CarpetMask
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CarpetSlab...Success -> active implementation Hyperslab
Activating thorn CarpetTracker...Success -> active implementation CarpetTracker
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Dissipation...Success -> active implementation Dissipation
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LeanBSSNMoL...Success -> active implementation LeanBSSNMoL
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn ReflectionSymmetry...Success -> active implementation ReflectionSymmetry
Activating thorn Slab...Success -> active implementation Slab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn SystemStatistics...Success -> active implementation SystemStatistics
Activating thorn TerminationTrigger...Success -> active implementation TerminationTrigger
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LeanBSSNMoL::LeanBSSN_RegisterSlicing: [meta] Register slicing
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      Slab::Slab_InitMPIDatatypes: Create MPI datatypes for complex variables in C
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      TerminationTrigger::TerminationTrigger_StartSignalHandler: Start signal handler
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        LeanBSSNMoL::LeanBSSN_RegisterVars: [meta] Register variables for MoL
      Slab::Slab_InitTimers: Initialise timers
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ReflectionSymmetry::ReflectionSymmetry_Register: Register reflection symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetMask::CarpetSurfaceParamCheck: [global] Check parameters
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Dissipation::dissipation_paramcheck: Check dissipation parameters for consistency
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      LeanBSSNMoL::Lean_ParamCheck: Check Lean parameters for consistency
      MoL::MoL_ParamCheck: Basic parameter checking
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      TerminationTrigger::TerminationTrigger_ParamCheck: Check consitency of parameters
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        Dissipation::setup_epsdis: Setup spatially varying dissipation
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        LeanBSSNMoL::LeanBSSN_symmetries: [global] Register symmetries of the BSSN grid functions
        LeanBSSNMoL::LeanBSSN_zero_rhs: Set all rhs functions to zero to prevent spurious nans
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        LeanBSSNMoL::LeanBSSN_adm2bssn: [local] Convert initial data into BSSN variables
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        Dissipation::setup_epsdis: Setup spatially varying dissipation
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        LeanBSSNMoL::LeanBSSN_symmetries: [global] Register symmetries of the BSSN grid functions
        LeanBSSNMoL::LeanBSSN_zero_rhs: Set all rhs functions to zero to prevent spurious nans
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
              CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
              CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
          LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
          LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
          GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        TerminationTrigger::TerminationTrigger_ResetMinutes: [global] Reset Watchtime
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        GROUP LeanBSSN_constraints: Compute constraints
          LeanBSSNMoL::LeanBSSN_bssn_constraints: Compute constraints
          LeanBSSNMoL::LeanBSSN_Constraints_Boundaries: [level] Enforce symmetry BCs in constraint computation
          GROUP LeanBSSN_Constraints_ApplyBCs: Apply boundary conditions
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
        TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
        TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
        TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
      CarpetTracker::CarpetTracker_SetPositions: [global] Set positions of refined regions
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                LeanBSSNMoL::LeanBSSN_CalcRHS: MoL RHS calculation
                LeanBSSNMoL::LeanBSSN_CalcRHS_Bdry: MoL boundary RHS calculation
              GROUP MoL_PostRHS: Modify RHS functions
                Dissipation::dissipation_add: Add Kreiss-Oliger dissipation to the right hand sides
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
                LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
                LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
                GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      GROUP LeanBSSN_constraints: Compute constraints
        LeanBSSNMoL::LeanBSSN_bssn_constraints: Compute constraints
        LeanBSSNMoL::LeanBSSN_Constraints_Boundaries: [level] Enforce symmetry BCs in constraint computation
        GROUP LeanBSSN_Constraints_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
      TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
      TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
      TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetMask::CarpetExcludedSetup: [global] [loop-local] Set up the weight function for the excluded regions
            CarpetMask::CarpetSurfaceSetup: [global] [loop-local] Set up the weight function for the excluded spherical surfaces
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        LeanBSSNMoL::LeanBSSN_remove_trA: Remove trace of A
        LeanBSSNMoL::LeanBSSN_impose_conf_fac_floor: Make sure conformal factor does not drop below specified value
        LeanBSSNMoL::LeanBSSN_Boundaries: [level] MoL boundary enforcement
        GROUP LeanBSSN_ApplyBCs: Apply boundary conditions
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            ReflectionSymmetry::ReflectionSymmetry_Apply: Apply reflection symmetries
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        LeanBSSNMoL::LeanBSSN_bssn2adm: [local] Convert variables back to the ADM ones
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-127: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=128000 MB, soft=128000 MB
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.408919 ns per clock tick (2.44547 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.2.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 128 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 128 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host cn101.delta.ncsa.illinois.edu, pid=180143
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-64,-64,-64] : [64,64,64]   ([128,128,128])
   interior extent: [-63.5,-63.5,-63.5] : [63.5,63.5,63.5]   ([127,127,127])
   exterior extent: [-65,-65,-65] : [65,65,65]   ([130,130,130])
   base_spacing   : [0.5,0.5,0.5]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-64,-64,-64] : [64,64,64]   ([128,128,128])
   interior extent   : [-63.5,-63.5,-63.5] : [63.5,63.5,63.5]   ([127,127,127])
   exterior extent   : [-65,-65,-65] : [65,65,65]   ([130,130,130])
   spacing           : [0.5,0.5,0.5]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [261,261,261]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 629 grid functions in 45 groups
INFO (Carpet):    There are 201 grid scalars in 55 groups
INFO (Carpet):    There are 111 1-dimensional grid arrays in 10 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 2 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 442. 21 are registered.
INFO (MoL): The maximum number of slow evolved variables is 442. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 442. 12 are registered.
INFO (MoL): The maximum number of SandR variables is 442. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 442. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 442. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 442. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [260,260,260]   ([261,261,261] + PADDING) 17779581
   [1][0][0]   exterior: [187,187,187] : [333,333,333]   ([147,147,147] + PADDING) 3176523
   [2][0][0]   exterior: [447,447,447] : [593,593,593]   ([147,147,147] + PADDING) 3176523
   [3][0][0]   exterior: [967,967,967] : [1113,1113,1113]   ([147,147,147] + PADDING) 3176523
   [4][0][0]   exterior: [2007,2007,2007] : [2153,2153,2153]   ([147,147,147] + PADDING) 3176523
   [5][0][0]   exterior: [4087,4087,4087] : [4233,4233,4233]   ([147,147,147] + PADDING) 3176523
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-65,-65,-65] : [65,65,65] : [0.5,0.5,0.5]
   [1][0][0]   exterior: [-18.25,-18.25,-18.25] : [18.25,18.25,18.25] : [0.25,0.25,0.25]
   [2][0][0]   exterior: [-9.125,-9.125,-9.125] : [9.125,9.125,9.125] : [0.125,0.125,0.125]
   [3][0][0]   exterior: [-4.5625,-4.5625,-4.5625] : [4.5625,4.5625,4.5625] : [0.0625,0.0625,0.0625]
   [4][0][0]   exterior: [-2.28125,-2.28125,-2.28125] : [2.28125,2.28125,2.28125] : [0.03125,0.03125,0.03125]
   [5][0][0]   exterior: [-1.140625,-1.140625,-1.140625] : [1.140625,1.140625,1.140625] : [0.015625,0.015625,0.015625]
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 2598k active, 3595k owned (+38%), 6151k total (+71%), 32 steps/time
INFO (Carpet): GF: vars: 151, pts: 4125M active, 4902M owned (+19%), 7743M total (+58%), 1.0 comp/proc
INFO (Carpet): GA: vars: 308, pts: 0M active, 0M total (+0%)
INFO (Carpet): Total required memory: 61.743 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:      17M     20M     22M      1M owned     10%
INFO (Carpet): Level  1:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  2:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  3:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  4:       4M      4M      4M      0M owned      6%
INFO (Carpet): Level  5:       4M      4M      4M      0M owned      6%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>5.0000000e-01  dy=>5.0000000e-01  dz=>5.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-65.000,65.000]  y=>[-65.000,65.000]  z=>[-65.000,65.000]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,260]  y=>[0,260]  z=>[0,260]
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.125 (courant_static)
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 1e-05
INFO (TwoPunctures): Attempting to find bare masses.
INFO (TwoPunctures): Target ADM masses: M_p=0.5 and M_m=0.5
INFO (TwoPunctures): ADM mass tolerance: 1e-10
INFO (TwoPunctures): Bare masses: mp=1, mm=0
INFO (TwoPunctures): ADM mass error: M_p_err=0.5, M_m_err=0.5
INFO (TwoPunctures): Bare masses: mp=0.00445218067613551, mm=0.00445218067613554
INFO (TwoPunctures): ADM mass error: M_p_err=5.55111512312578e-16, M_m_err=5.55111512312578e-16
INFO (TwoPunctures): Found bare masses.
INFO (TwoPunctures): The two puncture masses are mp=0.0044521806761355087 and mm=0.0044521806761355365
INFO (TwoPunctures): Puncture 1 ADM mass is 0.5
INFO (TwoPunctures): Puncture 2 ADM mass is 0.5
INFO (TwoPunctures): The total ADM mass is 0.00890436
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.125 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.0625 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.03125 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.015625 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.0078125 (courant_static)
INFO (TwoPunctures): Interpolating result
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   4.82161 4.81511 4.82622   meta mode/meta mode/global mode
 77.5   3.73717 3.72957 3.74250   main/Initialise/CallInitial
 66.2   3.19404 3.04152 3.27412   meta mode/meta mode/global mode/level(0)
 41.5   2.00026 1.99713 2.00237   main/CarpetStartup
 40.8   1.96688 1.95953 1.97995   main/CarpetStartup/CarpetLib::gh::regrid
 40.8   1.96611 1.95881 1.97878   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 30.8   1.48524 1.48197 1.48703   main/Initialise/CallInitial/CallRegridInitialMeta
 30.6   1.47603 1.47361 1.47826   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
 24.5   1.18241 1.17663 1.43513   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
 24.4   1.17885 1.13386 1.27147   main/Initialise/CallInitial/CCTK_INITIAL
 24.4   1.17847 1.17645 1.18127   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
 24.4   1.17835 1.17634 1.18116   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 24.4   1.17800 1.13309 1.27062   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
 22.2   1.07183 1.01187 1.11553   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
 19.5   0.94256 0.93354 1.12384   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
 19.0   0.91722 0.88313 0.95584   [0082] TwoPunctures: TwoPunctures in CCTK_INITIAL
 19.0   0.91673 0.88274 0.95531   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
 12.3   0.59466 0.57751 0.60069   main/Initialise/CallRestrict
  9.7   0.46748 0.42364 0.54388   main/Initialise/CallInitial/Poison
  9.5   0.45967 0.45762 0.46377   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
  8.5   0.41214 0.40899 0.41731   main/Initialise/CallAnalysis/CCTK_ANALYSIS
  8.4   0.40650 0.36976 0.43946   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
  8.4   0.40606 0.36905 0.43950   [0133] LeanBSSNMoL: LeanBSSN_bssn_constraints in CCTK_ANALYSIS
  8.4   0.40556 0.36860 0.43896   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns/LeanBSSN_bssn_constraints
  7.6   0.36524 0.30853 0.50277   meta mode/meta mode/global mode/level(1)
  7.0   0.33882 0.33549 0.39692   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/region
  6.6   0.31999 0.02901 0.34081   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/bcast_boxes
  6.5   0.31363 0.29687 0.35612   meta mode/meta mode/global mode/level(2)
  6.5   0.31248 0.30963 0.37086   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/buffers
  6.4   0.30927 0.29774 0.32425   meta mode/meta mode/global mode/level(3)
  6.4   0.30721 0.29905 0.31625   meta mode/meta mode/global mode/level(4)
  6.2   0.29767 0.28696 0.30643   meta mode/meta mode/global mode/level(5)
  6.2   0.29696 0.27575 0.33490   main/Initialise/CallRestrict/CCTK_POSTRESTRICTINITIAL
  6.1   0.29646 0.27523 0.33439   main/Initialise/CallRestrict/CCTK_POSTRESTRICTINITIAL/CallFunction
  5.4   0.26237 0.21763 0.30590   main/Initialise/CallInitial/CCTK_POSTINITIAL
  5.4   0.26191 0.21716 0.30544   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction
  5.2   0.25255 0.00165 0.25702   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/PostRegrid
  4.9   0.23480 0.23229 0.27347   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/mask
  4.8   0.23358 0.16556 0.37152   [0092] LeanBSSNMoL: LeanBSSN_adm2bssn in CCTK_INITIAL
  4.6   0.22386 0.22151 0.26653   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
======================================================================
INFO (TimerReport): Timer Report before terminating at iteration 10 time 0.078125
INFO (TimerReport): Top timers at iteration 10 time 0.078125
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   21.3066 21.2638 21.6069   meta mode/meta mode/global mode
 74.8   15.9280 15.6145 15.9326   main/Evolve
 63.4   13.5077 13.3173 13.6033   main/Evolve/CallEvol
 62.2   13.2598 13.1033 13.3454   main/Evolve/CallEvol/CCTK_EVOL
 62.2   13.2508 13.0939 13.3362   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 46.6    9.9207  8.4512 10.7897   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 32.8    6.9815  6.3328  7.5892   [0156] LeanBSSNMoL: LeanBSSN_CalcRHS in CCTK_EVOL
 32.7    6.9706  6.3233  7.5791   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/LeanBSSN_CalcRHS
 29.9    6.3665  6.2956  6.4451   meta mode/meta mode/global mode/level(5)
 27.1    5.7830  5.7769  6.0999   main/Initialise
 26.3    5.5945  5.3426  5.7142   meta mode/meta mode/global mode/level(0)
 17.5    3.7372  3.7296  3.7425   main/Initialise/CallInitial
 17.3    3.6887  3.6492  3.7381   meta mode/meta mode/global mode/level(4)
 15.2    3.2325  2.4156  4.6649   [0164] LeanBSSNMoL: LeanBSSN_Boundaries in CCTK_EVOL
 15.2    3.2293  2.4124  4.6620   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
 10.4    2.2098  2.1630  2.2482   meta mode/meta mode/global mode/level(3)
 10.0    2.1344  1.2661  3.3027   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
  9.4    2.0003  1.9971  2.0024   main/CarpetStartup
  9.2    1.9669  1.9595  1.9799   main/CarpetStartup/CarpetLib::gh::regrid
  9.2    1.9661  1.9588  1.9788   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
  7.3    1.5660  1.5175  1.6472   meta mode/meta mode/global mode/level(2)
  7.0    1.4852  1.4820  1.4870   main/Initialise/CallInitial/CallRegridInitialMeta
  6.9    1.4760  1.4736  1.4783   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid
  6.9    1.4701  0.5376  2.9152   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync/comm_state[6].state_do_some_work.step
  6.5    1.3759  1.3704  1.6882   main/Initialise/CallAnalysis
  6.4    1.3721  1.3671  1.6853   main/Initialise/CallAnalysis/CCTK_ANALYSIS
  6.4    1.3718  1.3667  1.6849   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction
  6.2    1.3186  1.2789  1.6165   main/Initialise/CallAnalysis/CCTK_ANALYSIS/CallFunction/thorns
  5.6    1.1863  1.1021  1.3436   main/Evolve/CallAnalysis
  5.5    1.1824  1.1766  1.4351   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap
  5.5    1.1789  1.1339  1.2715   main/Initialise/CallInitial/CCTK_INITIAL
  5.5    1.1785  1.1764  1.1813   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid
  5.5    1.1784  1.1763  1.1812   main/Initialise/CallInitial/CallRegridInitialMeta/Regrid/RegridMap/CarpetLib::gh::regrid/CarpetLib::dh::regrid
  5.5    1.1780  1.1331  1.2706   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
  5.3    1.1349  1.0581  1.2178   [0133] LeanBSSNMoL: LeanBSSN_bssn_constraints in CCTK_ANALYSIS
  5.1    1.0935  0.3957  1.7835   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Prolongate
  5.0    1.0718  1.0119  1.1155   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
  4.8    1.0251  0.3752  1.4044   [0159] MoL: MoL_Add in CCTK_EVOL
  4.7    1.0086  0.3658  1.3848   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/MoL_Add
  4.6    0.9877  0.9350  1.0777   main/Evolve/CallAnalysis/CCTK_ANALYSIS
======================================================================
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.02841800 |       0.02060200 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10078700 |       0.10003500 |   0.00000558 |        0.00000558 |        0.00000000 |        0.00000558 |        0.00000558 
LoopControl     | Set up LoopControl                      |          0.00001100 |       0.00000600 |   0.00001146 |        0.00001146 |        0.00000000 |        0.00001146 |        0.00001146 
Timers          | Prepare hierarchical timers             |          0.00001200 |       0.00000700 |   0.00001264 |        0.00001264 |        0.00000000 |        0.00001264 |        0.00001264 
Carpet          | Startup routine                         |          0.00000200 |       0.00000100 |   0.00000196 |        0.00000196 |        0.00000000 |        0.00000196 |        0.00000196 
IOUtil          | Startup routine                         |          0.00003000 |       0.00001600 |   0.00002966 |        0.00002966 |        0.00000000 |        0.00002966 |        0.00002966 
CarpetIOScalar  | Startup routine                         |          0.00000900 |       0.00000400 |   0.00000873 |        0.00000873 |        0.00000000 |        0.00000873 |        0.00000873 
CarpetInterp    | Startup routine                         |          0.00007900 |       0.00004200 |   0.00007950 |        0.00007950 |        0.00000000 |        0.00007950 |        0.00007950 
CarpetReduce    | Startup routine                         |          0.00023400 |       0.00012400 |   0.00023400 |        0.00023400 |        0.00000000 |        0.00023400 |        0.00023400 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000000 |       0.00000100 |   0.00000082 |        0.00000082 |        0.00000000 |        0.00000082 |        0.00000082 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000000 |   0.00000074 |        0.00000074 |        0.00000000 |        0.00000074 |        0.00000074 
AEILocalInterp  | register CCTK_InterpLocalUniform() inter|          0.00000200 |       0.00000100 |   0.00000172 |        0.00000172 |        0.00000000 |        0.00000172 |        0.00000172 
CarpetIOASCII   | Startup routine                         |          0.00032900 |       0.00017500 |   0.00033000 |        0.00033000 |        0.00000000 |        0.00033000 |        0.00033000 
LeanBSSNMoL     | Register slicing                        |          0.00002000 |       0.00001100 |   0.00002006 |        0.00002006 |        0.00000000 |        0.00002006 |        0.00002006 
LocalInterp     | register LocalInterp's interpolation ope|          0.00000100 |       0.00000100 |   0.00000085 |        0.00000085 |        0.00000000 |        0.00000085 |        0.00000085 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000200 |   0.00000249 |        0.00000249 |        0.00000000 |        0.00000249 |        0.00000249 
MoL             | Startup banner                          |          0.00000100 |       0.00000000 |   0.00000090 |        0.00000090 |        0.00000000 |        0.00000090 |        0.00000090 
Slab            | Create MPI datatypes for complex variabl|          0.00001300 |       0.00000700 |   0.00001305 |        0.00001305 |        0.00000000 |        0.00001305 |        0.00001305 
SymBase         | Register GH Extension for SymBase       |          0.00000400 |       0.00000200 |   0.00000382 |        0.00000382 |        0.00000000 |        0.00000382 |        0.00000382 
TerminationTrigg| Start signal handler                    |          0.00002900 |       0.00001600 |   0.00002938 |        0.00002938 |        0.00000000 |        0.00002938 |        0.00002938 
CarpetIOHDF5    | Startup routine                         |          0.00018600 |       0.00000000 |   0.00018620 |        0.00018620 |        0.00000000 |        0.00018620 |        0.00018620 
Vectors         | Print startup message                   |          0.00000100 |       0.00000000 |   0.00000161 |        0.00000161 |        0.00000000 |        0.00000161 |        0.00000161 
hwloc           | Output hwloc version                    |          0.00000200 |       0.00000000 |   0.00000235 |        0.00000235 |        0.00000000 |        0.00000235 |        0.00000235 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.13017400 |       0.12105300 |   0.00097756 |        0.00097756 |        0.00000000 |        0.00097756 |        0.00097756 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00003600 |       0.00002900 |   0.00003530 |        0.00003530 |        0.00000000 |        0.00003530 |        0.00003530 
Boundary        | Register boundary conditions that this t|          0.00001200 |       0.00001000 |   0.00001199 |        0.00001199 |        0.00000000 |        0.00001199 |        0.00001199 
CarpetRegrid2   | Initialise locations of refined regions |          0.00001500 |       0.00001200 |   0.00001489 |        0.00001489 |        0.00000000 |        0.00001489 |        0.00001489 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00007200 |       0.00005900 |   0.00007178 |        0.00007178 |        0.00000000 |        0.00007178 |        0.00007178 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001100 |       0.00001000 |   0.00001154 |        0.00001154 |        0.00000000 |        0.00001154 |        0.00001154 
CoordGauge      | Identify the slicing for the next iterat|          0.00000800 |       0.00000600 |   0.00000750 |        0.00000750 |        0.00000000 |        0.00000750 |        0.00000750 
MoL             | Set up the MoL bookkeeping index arrays |          0.00002400 |       0.00002000 |   0.00002450 |        0.00002450 |        0.00000000 |        0.00002450 |        0.00002450 
MoL             | Set the flag so it is ok to register wit|          0.00000800 |       0.00000700 |   0.00000811 |        0.00000811 |        0.00000000 |        0.00000811 |        0.00000811 
TmunuBase       | Set the stress_energy_state variable    |          0.00008500 |       0.00007100 |   0.00008473 |        0.00008473 |        0.00000000 |        0.00008473 |        0.00008473 
LeanBSSNMoL     | Register variables for MoL              |          0.00010400 |       0.00008700 |   0.00010419 |        0.00010419 |        0.00000000 |        0.00010419 |        0.00010419 
Slab            | Initialise timers                       |          0.00003600 |       0.00003000 |   0.00003666 |        0.00003666 |        0.00000000 |        0.00003666 |        0.00003666 
CartGrid3D      | Register symmetry boundaries            |          0.00005700 |       0.00004700 |   0.00005720 |        0.00005720 |        0.00000000 |        0.00005720 |        0.00005720 
ReflectionSymmet| Register reflection symmetry boundaries |          0.00001200 |       0.00001200 |   0.00001175 |        0.00001175 |        0.00000000 |        0.00001175 |        0.00001175 
SymBase         | Print symmetry boundary face description|          0.00000900 |       0.00000900 |   0.00000951 |        0.00000951 |        0.00000000 |        0.00000951 |        0.00000951 
MoL             | Report how many of each type of variable|          0.00005200 |       0.00005300 |   0.00005253 |        0.00005253 |        0.00000000 |        0.00005253 |        0.00005253 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00054100 |       0.00046200 |   0.00054216 |        0.00054216 |        0.00000000 |        0.00054216 |        0.00054216 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001600 |       0.00001500 |   0.00001538 |        0.00001538 |        0.00000000 |        0.00001538 |        0.00001538 
Boundary        | Check dimension of grid variables       |          0.00000600 |       0.00000700 |   0.00000648 |        0.00000648 |        0.00000000 |        0.00000648 |        0.00000648 
Carpet          | Parameter checking routine              |          0.00004100 |       0.00004000 |   0.00004038 |        0.00004038 |        0.00000000 |        0.00004038 |        0.00004038 
CarpetLib       | Test prolongation operators             |          0.00001800 |       0.00001800 |   0.00001851 |        0.00001851 |        0.00000000 |        0.00001851 |        0.00001851 
CarpetMask      | Check parameters                        |          0.00001000 |       0.00000900 |   0.00000954 |        0.00000954 |        0.00000000 |        0.00000954 |        0.00000954 
CarpetRegrid2   | Check parameters                        |          0.00003100 |       0.00003100 |   0.00003118 |        0.00003118 |        0.00000000 |        0.00003118 |        0.00003118 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00000900 |       0.00000900 |   0.00000901 |        0.00000901 |        0.00000000 |        0.00000901 |        0.00000901 
Dissipation     | Check dissipation parameters for consist|          0.00000900 |       0.00000800 |   0.00000817 |        0.00000817 |        0.00000000 |        0.00000817 |        0.00000817 
Fortran         | Test whether Fortran parameters work cor|          0.00000900 |       0.00000900 |   0.00000836 |        0.00000836 |        0.00000000 |        0.00000836 |        0.00000836 
LeanBSSNMoL     | Check Lean parameters for consistency   |          0.00000700 |       0.00000700 |   0.00000672 |        0.00000672 |        0.00000000 |        0.00000672 |        0.00000672 
MoL             | Basic parameter checking                |          0.00000900 |       0.00000900 |   0.00000839 |        0.00000839 |        0.00000000 |        0.00000839 |        0.00000839 
SphericalSurface| Check that all surface names are unique |          0.00000800 |       0.00000800 |   0.00000828 |        0.00000828 |        0.00000000 |        0.00000828 |        0.00000828 
TerminationTrigg| Check consitency of parameters          |          0.00001000 |       0.00000900 |   0.00000932 |        0.00000932 |        0.00000000 |        0.00000932 |        0.00000932 
TmunuBase       | Check that no deprecated parameters are |          0.00000700 |       0.00000600 |   0.00000676 |        0.00000676 |        0.00000000 |        0.00000676 |        0.00000676 
TwoPunctures    | Check parameters and thorn needs        |          0.00000800 |       0.00000900 |   0.00000831 |        0.00000831 |        0.00000000 |        0.00000831 |        0.00000831 
Vectors         | Run correctness tests.                  |          0.00015600 |       0.00015600 |   0.00015614 |        0.00015614 |        0.00000000 |        0.00015614 |        0.00015614 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00035400 |       0.00035000 |   0.00035091 |        0.00035091 |        0.00000000 |        0.00035091 |        0.00035091 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00102900 |       0.00091800 |   0.00102628 |        0.00017105 |        0.00007470 |        0.00010499 |        0.00019919 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00013400 |       0.00011100 |   0.00013350 |        0.00002225 |        0.00001493 |        0.00001753 |        0.00003497 
ADMBase         | Set the dtshift_state variable to 1     |          0.00010200 |       0.00009400 |   0.00010257 |        0.00001709 |        0.00000543 |        0.00001559 |        0.00002191 
ADMMacros       | Initialize the local_spatial_order      |          0.00010500 |       0.00009400 |   0.00010464 |        0.00001744 |        0.00000515 |        0.00001586 |        0.00002206 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00019900 |       0.00017600 |   0.00020087 |        0.00003348 |        0.00006548 |        0.00002011 |        0.00009320 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00815600 |       0.00522800 |   0.00815520 |        0.00135920 |        0.00086283 |        0.00099462 |        0.00210606 
SphericalSurface| Set surface resolution automatically    |          0.00042400 |       0.00033800 |   0.00042288 |        0.00007048 |        0.00037513 |        0.00000179 |        0.00041292 
Dissipation     | Ensure that there are enough ghost zones|          0.00165900 |       0.00153800 |   0.00165923 |        0.00027654 |        0.00012614 |        0.00022717 |        0.00038610 
LeanBSSNMoL     | Register symmetries of the BSSN grid fun|          0.00022600 |       0.00022400 |   0.00022338 |        0.00003723 |        0.00019310 |        0.00000174 |        0.00021350 
LeanBSSNMoL     | Set all rhs functions to zero to prevent|          0.03590300 |       0.03141500 |   0.03590372 |        0.00598395 |        0.00644816 |        0.00440613 |        0.01182873 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00004800 |       0.00004500 |   0.00004638 |        0.00000773 |        0.00003109 |        0.00000160 |        0.00003611 
SphericalSurface| Calculate surface coordinate descriptors|          0.00002700 |       0.00002400 |   0.00002486 |        0.00000414 |        0.00001256 |        0.00000136 |        0.00001559 
CarpetReduce    | Allocate the weight function            |          0.00023100 |       0.00023100 |   0.00023260 |        0.00003877 |        0.00020084 |        0.00000175 |        0.00022211 
CarpetReduce    | Initialise the weight function          |          0.00280700 |       0.00181100 |   0.00280502 |        0.00046750 |        0.00254981 |        0.00000167 |        0.00279515 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00168000 |       0.00164000 |   0.00167868 |        0.00027978 |        0.00152361 |        0.00000145 |        0.00167064 
CarpetReduce    | Set up the weight function for the restr|          0.00231300 |       0.00228900 |   0.00231006 |        0.00038501 |        0.00209859 |        0.00000170 |        0.00230075 
CarpetMask      | Set up the weight function for the exclu|          0.00032200 |       0.00032200 |   0.00032388 |        0.00005398 |        0.00028070 |        0.00000233 |        0.00031022 
CarpetMask      | Set up the weight function for the exclu|          0.00020500 |       0.00019300 |   0.00020577 |        0.00003430 |        0.00017541 |        0.00000178 |        0.00019442 
CarpetReduce    | Set the weight function                 |          0.00992900 |       0.00698900 |   0.00992663 |        0.00165444 |        0.00905231 |        0.00000138 |        0.00991803 
CarpetReduce    | Test the weight function                |          0.09565900 |       0.09510500 |   0.09565417 |        0.01594236 |        0.08731151 |        0.00000135 |        0.09564650 
SphericalSurface| Set surface radii to be used for initial|          0.00003100 |       0.00003100 |   0.00002936 |        0.00000489 |        0.00001636 |        0.00000169 |        0.00001982 
SphericalSurface| Test the state of the spherical surfaces|          0.00002600 |       0.00002300 |   0.00002385 |        0.00000398 |        0.00001112 |        0.00000180 |        0.00001413 
SymBase         | Check whether the driver set up the grid|          0.00050700 |       0.00045100 |   0.00050433 |        0.00008406 |        0.00007665 |        0.00004177 |        0.00013345 
TerminationTrigg| Clear trigger state                     |          0.00012600 |       0.00011400 |   0.00012628 |        0.00002105 |        0.00000333 |        0.00001902 |        0.00002325 
TerminationTrigg| Start timer                             |          0.00024900 |       0.00021900 |   0.00024789 |        0.00004131 |        0.00003006 |        0.00002515 |        0.00005863 
Time            | Initialise Time variables               |          0.00002200 |       0.00002100 |   0.00002176 |        0.00000363 |        0.00001163 |        0.00000130 |        0.00001424 
Time            | Set timestep based on Courant condition |          0.00008000 |       0.00007500 |   0.00007962 |        0.00001327 |        0.00000429 |        0.00001012 |        0.00001594 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.16219900 |       0.14971900 |   0.16217342 |        0.02702890 |        0.11156092 |        0.00592279 |        0.12870763 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00014500 |       0.00013400 |   0.00014401 |        0.00002400 |        0.00000906 |        0.00002038 |        0.00003046 
TwoPunctures    | Create puncture black hole initial data |          0.91265500 |       0.90611900 |   0.91262419 |        0.15210403 |        0.60081820 |        0.04129619 |        0.70057183 
TwoPunctures    | Output TwoPunctures metadata            |          0.01744600 |       0.00064800 |   0.01744355 |        0.00290726 |        0.01591271 |        0.00000162 |        0.01743351 
ADMBase         | Set the lapse to 1 at all points        |          0.00202300 |       0.00192300 |   0.00202227 |        0.00033704 |        0.00029959 |        0.00013157 |        0.00051479 
ADMBase         | Set the shift to 0 at all points        |          0.00453500 |       0.00277200 |   0.00453291 |        0.00075549 |        0.00066634 |        0.00021232 |        0.00109004 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00180200 |       0.00154700 |   0.00180328 |        0.00030055 |        0.00031488 |        0.00008519 |        0.00047165 
ADMBase         | Set the dtshift to 0 at all points      |          0.00484600 |       0.00409500 |   0.00484510 |        0.00080752 |        0.00080347 |        0.00021303 |        0.00124939 
CarpetIOASCII   | Initialisation routine                  |          0.00003100 |       0.00002900 |   0.00003024 |        0.00000504 |        0.00001840 |        0.00000154 |        0.00002183 
CarpetIOBasic   | Initialisation routine                  |          0.00002400 |       0.00002300 |   0.00002438 |        0.00000406 |        0.00001412 |        0.00000137 |        0.00001695 
CarpetIOHDF5    | Initialisation routine                  |          0.00002500 |       0.00002300 |   0.00002443 |        0.00000407 |        0.00001366 |        0.00000140 |        0.00001654 
CarpetIOScalar  | Initialisation routine                  |          0.00002400 |       0.00002100 |   0.00002250 |        0.00000375 |        0.00001276 |        0.00000135 |        0.00001540 
LeanBSSNMoL     | Convert initial data into BSSN variables|          0.23203100 |       0.22047000 |   0.23202492 |        0.03867082 |        0.03277266 |        0.02460448 |        0.06040968 
MoL             | Initialise the step size control        |          0.00004900 |       0.00004700 |   0.00005046 |        0.00000841 |        0.00000456 |        0.00000627 |        0.00001097 
Boundary        | Apply all requested local physical bound|          0.00044000 |       0.00043000 |   0.00044001 |        0.00007334 |        0.00003540 |        0.00005994 |        0.00010082 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00011800 |       0.00011400 |   0.00012012 |        0.00002002 |        0.00001248 |        0.00001657 |        0.00003126 
ReflectionSymmet| Apply reflection symmetries             |          0.00010900 |       0.00010300 |   0.00010729 |        0.00001788 |        0.00000853 |        0.00001560 |        0.00002557 
Boundary        | Unselect all grid variables for boundary|          0.00002800 |       0.00002800 |   0.00002795 |        0.00000466 |        0.00000354 |        0.00000366 |        0.00000782 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          1.17633100 |       1.13852600 |   1.17628761 |        0.19604793 |        0.65172037 |        0.06667250 |        0.78201851 
==================================================================================================================================================================================================
CarpetIOHDF5    | Close all filereader input files        |          0.00004800 |       0.00004700 |   0.00004751 |        0.00000792 |        0.00003314 |        0.00000153 |        0.00003816 
LeanBSSNMoL     | Remove trace of A                       |          0.01784100 |       0.01748300 |   0.01783981 |        0.00297330 |        0.00478415 |        0.00197517 |        0.00733635 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.00112900 |       0.00112100 |   0.00112768 |        0.00018795 |        0.00017681 |        0.00008960 |        0.00030674 
LeanBSSNMoL     | MoL boundary enforcement                |          0.14143900 |       0.11663000 |   0.14143727 |        0.02357288 |        0.01683236 |        0.01799333 |        0.03710687 
Boundary        | Apply all requested local physical bound|          0.00112100 |       0.00101300 |   0.00111942 |        0.00018657 |        0.00023826 |        0.00009558 |        0.00039185 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00017500 |       0.00015900 |   0.00017549 |        0.00002925 |        0.00002975 |        0.00002326 |        0.00005639 
ReflectionSymmet| Apply reflection symmetries             |          0.00028600 |       0.00017700 |   0.00028544 |        0.00004757 |        0.00006872 |        0.00003283 |        0.00011024 
Boundary        | Unselect all grid variables for boundary|          0.00004400 |       0.00003000 |   0.00004301 |        0.00000717 |        0.00000565 |        0.00000530 |        0.00001200 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.06103100 |       0.05961000 |   0.06102862 |        0.01017144 |        0.02594344 |        0.00387569 |        0.03365940 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.22311400 |       0.19627000 |   0.22310426 |        0.03718404 |        0.04811227 |        0.02409228 |        0.07901802 
==================================================================================================================================================================================================
LeanBSSNMoL     | Remove trace of A                       |          0.02404400 |       0.02375600 |   0.02404312 |        0.00400719 |        0.00480139 |        0.00274550 |        0.00835665 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.00206100 |       0.00205200 |   0.00206119 |        0.00034353 |        0.00032872 |        0.00024140 |        0.00063326 
LeanBSSNMoL     | MoL boundary enforcement                |          0.20344900 |       0.18749400 |   0.20344465 |        0.03390744 |        0.04615245 |        0.02012298 |        0.07500782 
Boundary        | Apply all requested local physical bound|          0.00097100 |       0.00094200 |   0.00096991 |        0.00016165 |        0.00005541 |        0.00012476 |        0.00018239 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00015800 |       0.00014900 |   0.00015728 |        0.00002621 |        0.00001197 |        0.00002092 |        0.00003646 
ReflectionSymmet| Apply reflection symmetries             |          0.00020700 |       0.00019500 |   0.00020766 |        0.00003461 |        0.00000680 |        0.00003116 |        0.00003971 
Boundary        | Unselect all grid variables for boundary|          0.00004100 |       0.00003800 |   0.00004015 |        0.00000669 |        0.00000357 |        0.00000530 |        0.00000972 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.06271000 |       0.06196500 |   0.06270824 |        0.01045137 |        0.02250325 |        0.00326347 |        0.03073212 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTRESTRICTINITIAL |          0.29364100 |       0.27659100 |   0.29363221 |        0.04893870 |        0.07386355 |        0.02655548 |        0.11499813 
==================================================================================================================================================================================================
CarpetIOHDF5    | Initial data checkpoint routine         |          0.00011300 |       0.00010900 |   0.00011067 |        0.00001845 |        0.00007890 |        0.00000168 |        0.00009023 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CPINITIAL           |          0.00011300 |       0.00010900 |   0.00011067 |        0.00001845 |        0.00007890 |        0.00000168 |        0.00009023 
==================================================================================================================================================================================================
CarpetTracker   | Set positions of refined regions        |          0.00063000 |       0.00054700 |   0.00062272 |        0.00001038 |        0.00003527 |        0.00000768 |        0.00003843 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PREREGRID           |          0.00063000 |       0.00054700 |   0.00062272 |        0.00001038 |        0.00003527 |        0.00000768 |        0.00003843 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00084400 |       0.00069300 |   0.00083775 |        0.00003808 |        0.00008253 |        0.00002244 |        0.00010814 
LoopControl     | Update LoopControl algorithm preferences|          0.00152100 |       0.00125300 |   0.00151737 |        0.00006897 |        0.00052019 |        0.00000155 |        0.00041876 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00013900 |       0.00011100 |   0.00013805 |        0.00000627 |        0.00002473 |        0.00000174 |        0.00002303 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00250400 |       0.00205700 |   0.00249316 |        0.00011333 |        0.00062745 |        0.00002574 |        0.00054994 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00019900 |       0.00016700 |   0.00020168 |        0.00000917 |        0.00001928 |        0.00000443 |        0.00002337 
MoL             | Set the counter for the ODE method to lo|          0.00018300 |       0.00015200 |   0.00018041 |        0.00000820 |        0.00001914 |        0.00000493 |        0.00002570 
MoL             | Ensure the correct time and timestep are|          0.00013600 |       0.00011500 |   0.00013894 |        0.00000632 |        0.00000817 |        0.00000382 |        0.00001104 
MoL             | Allocate storage for scratch levels     |          0.00219800 |       0.00174100 |   0.00219747 |        0.00009989 |        0.00029780 |        0.00002800 |        0.00022740 
MoL             | Allocate sufficient space for array scra|          0.00053300 |       0.00046800 |   0.00053489 |        0.00002431 |        0.00004571 |        0.00001950 |        0.00006711 
MoL             | Ensure the data is in the correct timele|          0.20341200 |       0.17325900 |   0.20340537 |        0.00924570 |        0.04739903 |        0.00107731 |        0.05095722 
MoL             | Initialise the RHS functions            |          0.19983500 |       0.18610500 |   0.19983661 |        0.00227087 |        0.02260289 |        0.00043425 |        0.02012965 
LeanBSSNMoL     | MoL RHS calculation                     |          6.80664600 |       6.74851700 |   6.80643619 |        0.07734587 |        0.49373695 |        0.06022751 |        0.32388551 
LeanBSSNMoL     | MoL boundary RHS calculation            |          0.10944500 |       0.10845200 |   0.10943629 |        0.00124359 |        0.04582160 |        0.00016301 |        0.02499115 
Dissipation     | Add Kreiss-Oliger dissipation to the rig|          0.39194300 |       0.38502800 |   0.39193990 |        0.00445386 |        0.02554289 |        0.00357595 |        0.01720499 
MoL             | Updates calculated with the efficient Ru|          0.37518400 |       0.36132800 |   0.37519143 |        0.00426354 |        0.06192761 |        0.00132016 |        0.05999993 
MoL             | Alter the counter number                |          0.00079300 |       0.00077100 |   0.00077972 |        0.00000886 |        0.00003484 |        0.00000553 |        0.00002741 
MoL             | If necessary, change the time           |          0.00052800 |       0.00051300 |   0.00051386 |        0.00000584 |        0.00001757 |        0.00000432 |        0.00001692 
LeanBSSNMoL     | Remove trace of A                       |          0.22456100 |       0.21881400 |   0.22455137 |        0.00255172 |        0.01319727 |        0.00204738 |        0.01079479 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.01577300 |       0.01516200 |   0.01576493 |        0.00017915 |        0.00097458 |        0.00008882 |        0.00058915 
LeanBSSNMoL     | MoL boundary enforcement                |          4.63940500 |       4.40933400 |   4.63926795 |        0.05271895 |        0.30636566 |        0.01199264 |        0.15285829 
Boundary        | Apply all requested local physical bound|          0.01172000 |       0.01077900 |   0.01171968 |        0.00013318 |        0.00096134 |        0.00005978 |        0.00069277 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00206200 |       0.00188500 |   0.00206232 |        0.00002344 |        0.00004377 |        0.00001875 |        0.00004972 
ReflectionSymmet| Apply reflection symmetries             |          0.00307700 |       0.00284900 |   0.00307745 |        0.00003497 |        0.00018997 |        0.00002548 |        0.00021164 
Boundary        | Unselect all grid variables for boundary|          0.00043000 |       0.00039100 |   0.00042514 |        0.00000483 |        0.00001082 |        0.00000362 |        0.00000983 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.22163300 |       0.21641900 |   0.22163851 |        0.00251862 |        0.01556386 |        0.00127804 |        0.00773978 
MoL             | If necessary, change the timestep       |          0.00075500 |       0.00071000 |   0.00074923 |        0.00000851 |        0.00002777 |        0.00000479 |        0.00002012 
MoL             | Control the step size                   |          0.00014100 |       0.00013600 |   0.00013904 |        0.00000632 |        0.00001372 |        0.00000439 |        0.00001497 
MoL             | Restoring the Save and Restore variables|          0.00171200 |       0.00165500 |   0.00170713 |        0.00007760 |        0.00023347 |        0.00003799 |        0.00023113 
MoL             | Free storage for scratch levels         |          0.00111100 |       0.00105900 |   0.00110682 |        0.00005031 |        0.00010410 |        0.00002706 |        0.00012174 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |         13.21341500 |      12.84580900 |  13.21300233 |        0.15729361 |        1.03515981 |        0.08245746 |        0.67090132 
==================================================================================================================================================================================================
LeanBSSNMoL     | Remove trace of A                       |          0.03068000 |       0.03045200 |   0.03068141 |        0.00236011 |        0.00114145 |        0.00203861 |        0.00307388 
LeanBSSNMoL     | Make sure conformal factor does not drop|          0.00209800 |       0.00206400 |   0.00209622 |        0.00016125 |        0.00018589 |        0.00009298 |        0.00023687 
LeanBSSNMoL     | MoL boundary enforcement                |          0.67735400 |       0.64753300 |   0.67734082 |        0.05210314 |        0.09601154 |        0.02137231 |        0.08784791 
Boundary        | Apply all requested local physical bound|          0.00200300 |       0.00180900 |   0.00200230 |        0.00015402 |        0.00007707 |        0.00010329 |        0.00018206 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00031100 |       0.00027900 |   0.00030974 |        0.00002383 |        0.00000895 |        0.00002122 |        0.00003101 
ReflectionSymmet| Apply reflection symmetries             |          0.00044800 |       0.00040400 |   0.00044944 |        0.00003457 |        0.00000721 |        0.00003140 |        0.00003913 
Boundary        | Unselect all grid variables for boundary|          0.00009100 |       0.00007700 |   0.00009166 |        0.00000705 |        0.00001262 |        0.00000482 |        0.00001871 
LeanBSSNMoL     | Convert variables back to the ADM ones  |          0.04137700 |       0.03548400 |   0.04138010 |        0.00318308 |        0.00464639 |        0.00173945 |        0.00595759 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTRESTRICT        |          0.75436200 |       0.71810200 |   0.75435168 |        0.05802705 |        0.10209112 |        0.02540407 |        0.09738717 
==================================================================================================================================================================================================
SphericalSurface| Set surface radii                       |          0.00022900 |       0.00017000 |   0.00022368 |        0.00000932 |        0.00003841 |        0.00000138 |        0.00003510 
SphericalSurface| Test the state of the spherical surfaces|          0.00014300 |       0.00010500 |   0.00014008 |        0.00000584 |        0.00002350 |        0.00000128 |        0.00001614 
NaNChecker      | Prepare data structures to check for NaN|          0.00017100 |       0.00015700 |   0.00017272 |        0.00000720 |        0.00002167 |        0.00000357 |        0.00001962 
NaNChecker      | Check for NaNs                          |          0.00160400 |       0.00132800 |   0.00159458 |        0.00006644 |        0.00024191 |        0.00002162 |        0.00017527 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00011500 |       0.00009600 |   0.00011341 |        0.00000473 |        0.00000718 |        0.00000326 |        0.00000879 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00062200 |       0.00044100 |   0.00062305 |        0.00002596 |        0.00012964 |        0.00000130 |        0.00005966 
Dissipation     | Setup spatially varying dissipation     |          0.20319100 |       0.19684600 |   0.20319037 |        0.00846627 |        0.05889193 |        0.00018875 |        0.04556482 
CarpetReduce    | Allocate the weight function            |          0.00067700 |       0.00064700 |   0.00067628 |        0.00002818 |        0.00016459 |        0.00000136 |        0.00011344 
CarpetReduce    | Initialise the weight function          |          0.01790400 |       0.01755600 |   0.01790519 |        0.00074605 |        0.00400502 |        0.00000125 |        0.00196156 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00937800 |       0.00801200 |   0.00937769 |        0.00039074 |        0.00207818 |        0.00000124 |        0.00092082 
CarpetReduce    | Set up the weight function for the restr|          0.01231600 |       0.00999400 |   0.01231657 |        0.00051319 |        0.00272945 |        0.00000125 |        0.00117343 
CarpetMask      | Set up the weight function for the exclu|          0.00172900 |       0.00128500 |   0.00172617 |        0.00007192 |        0.00037591 |        0.00000126 |        0.00016456 
CarpetMask      | Set up the weight function for the exclu|          0.00156400 |       0.00113500 |   0.00156482 |        0.00006520 |        0.00034047 |        0.00000120 |        0.00015075 
CarpetReduce    | Set the weight function                 |          0.04308600 |       0.04110500 |   0.04309011 |        0.00179542 |        0.01003397 |        0.00000125 |        0.00570650 
CarpetReduce    | Test the weight function                |          0.10972700 |       0.10824700 |   0.10972191 |        0.00457175 |        0.02850632 |        0.00000121 |        0.01644483 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.40245600 |       0.38712400 |   0.40243663 |        0.01676819 |        0.10758817 |        0.00023120 |        0.07251529 
==================================================================================================================================================================================================
CarpetIOHDF5    | Evolution checkpoint routine            |          0.00114700 |       0.00101500 |   0.00113551 |        0.00006308 |        0.00023216 |        0.00000180 |        0.00012634 
TimerReport     | Print the timer report                  |          0.00011600 |       0.00009400 |   0.00011538 |        0.00000641 |        0.00002109 |        0.00000124 |        0.00001764 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CHECKPOINT          |          0.00126300 |       0.00110900 |   0.00125089 |        0.00006949 |        0.00025325 |        0.00000305 |        0.00014399 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00016000 |       0.00014300 |   0.00015770 |        0.00000657 |        0.00002942 |        0.00000143 |        0.00002595 
CarpetLib       | Print memory statistics if desired      |          0.00012200 |       0.00011600 |   0.00012473 |        0.00000520 |        0.00002316 |        0.00000118 |        0.00001714 
LeanBSSNMoL     | Compute constraints                     |          1.11741500 |       1.10747400 |   1.11738134 |        0.04655756 |        0.14389586 |        0.03957168 |        0.18741620 
LeanBSSNMoL     | Enforce symmetry BCs in constraint compu|          0.26594100 |       0.25099800 |   0.26593157 |        0.01108048 |        0.03183717 |        0.00320432 |        0.03062861 
Boundary        | Apply all requested local physical bound|          0.00322800 |       0.00313500 |   0.00322678 |        0.00013445 |        0.00056985 |        0.00007499 |        0.00061512 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00054300 |       0.00053600 |   0.00054383 |        0.00002266 |        0.00002274 |        0.00001844 |        0.00003976 
ReflectionSymmet| Apply reflection symmetries             |          0.00054600 |       0.00053400 |   0.00054279 |        0.00002262 |        0.00002161 |        0.00001904 |        0.00003828 
Boundary        | Unselect all grid variables for boundary|          0.00012700 |       0.00013000 |   0.00012925 |        0.00000539 |        0.00001078 |        0.00000383 |        0.00001254 
LoopControl     | Output LoopControl statistics           |          0.00175700 |       0.00171100 |   0.00176040 |        0.00007335 |        0.00038905 |        0.00000132 |        0.00020307 
SystemStatistics| Collect system statistics               |          0.00152100 |       0.00147300 |   0.00151769 |        0.00006324 |        0.00034172 |        0.00000147 |        0.00020184 
TerminationTrigg| Check elapsed job walltime              |          0.00058700 |       0.00057200 |   0.00058449 |        0.00002435 |        0.00003230 |        0.00001701 |        0.00004071 
TerminationTrigg| Check if we received a termination signa|          0.00050500 |       0.00049900 |   0.00050302 |        0.00002096 |        0.00002215 |        0.00001651 |        0.00003502 
TerminationTrigg| Check termination file                  |          0.00043400 |       0.00043200 |   0.00043220 |        0.00001801 |        0.00001706 |        0.00001529 |        0.00003245 
TimerReport     | Print the timer report                  |          1.22661700 |       0.95331600 |   1.22657852 |        0.05110744 |        1.20062126 |        0.00000128 |        1.22644963 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          2.61950300 |       2.32106900 |   2.61941430 |        0.10914226 |        1.37783413 |        0.04294781 |        1.44575632 
==================================================================================================================================================================================================
CarpetIOHDF5    | Termination checkpoint routine          |          0.00012500 |       0.00012400 |   0.00012427 |        0.00002071 |        0.00009400 |        0.00000164 |        0.00010617 
LoopControl     | Output LoopControl statistics           |          0.00009700 |       0.00009900 |   0.00009785 |        0.00001631 |        0.00008142 |        0.00000137 |        0.00009064 
MoL             | Free the MoL bookkeeping index arrays   |          0.00023600 |       0.00023500 |   0.00023573 |        0.00003929 |        0.00002207 |        0.00003060 |        0.00005876 
TimerReport     | Print the timer report                  |          1.95782100 |       1.71572900 |   1.95775884 |        0.32629314 |        1.78717282 |        0.00000143 |        1.95775125 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          1.95827900 |       1.71618700 |   1.95821669 |        0.32636945 |        1.78737032 |        0.00003504 |        1.95800682 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00039700 |       0.00037500 |   0.00039701 |        0.00039701 |        0.00000000 |        0.00039701 |        0.00039701 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00039700 |       0.00037500 |   0.00039701 |        0.00039701 |        0.00000000 |        0.00039701 |        0.00039701 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |         23.67337300 |      21.82091600 |  23.67263257 |       23.67263257 |        0.00000000 |       23.67263257 |       23.67263257 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
